<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo博客部署到Netlify自定义域名</title>
    <link href="/actions/create-this-blog/"/>
    <url>/actions/create-this-blog/</url>
    
    <content type="html"><![CDATA[<p>占个坑，有空了和师姐再走一遍买域名-注册netlify-部署的全部流程</p><img src="/actions/create-this-blog/badge-success.svg" class="" title="image example">]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>利用工位电脑做跳板机给内网服务器联网</title>
    <link href="/enviroments/server-jumper/"/>
    <url>/enviroments/server-jumper/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考了<a href="https://blog.csdn.net/euzmin/article/details/130754468">这篇</a>和<a href="https://www.cnblogs.com/pearl-t/p/16045333.html">这篇</a>文章，结合了一下。</p></blockquote><h1 id="1-工位Windows上的配置"><a href="#1-工位Windows上的配置" class="headerlink" title="1.工位Windows上的配置"></a>1.工位Windows上的配置</h1><h2 id="1-安装squid"><a href="#1-安装squid" class="headerlink" title="1.安装squid"></a>1.安装squid</h2><p><a href="https://squid.diladele.com/">下载地址</a>，下载完后直接安装，安装过程中一直点下一步就可以了。</p><h2 id="2-设置防火墙"><a href="#2-设置防火墙" class="headerlink" title="2.设置防火墙"></a>2.设置防火墙</h2><p>打开防火墙，点击入站规则，再点击新建规则，选择端口，squid的默认端口为3128，选择允许连接，连接范围全选，输入名称，完成。</p><h2 id="3-启动squid"><a href="#3-启动squid" class="headerlink" title="3.启动squid"></a>3.启动squid</h2><p>双击安装后的那个软件图标（不是终端图标的那个图标），右下角看到已经启动就可以</p><h1 id="2-大服务器配置代理"><a href="#2-大服务器配置代理" class="headerlink" title="2.大服务器配置代理"></a>2.大服务器配置代理</h1><p>在大服务器上需要联网的时候，执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">export http_proxy=10.15.31.xxx:3128<br>export https_proxy=10.15.31.xxx:3128<br></code></pre></td></tr></table></figure><p>其中ip地址为工位电脑的ip地址，端口就是工位Windows电脑设置的默认3128</p><p>然后验证，<code>curl https://packages.diladele.com/squid/4.14/squid.msi</code>，如果返回正常，就可以了。</p><h1 id="3-其他"><a href="#3-其他" class="headerlink" title="3.其他"></a>3.其他</h1><p>可以进一步设置一个alias命令，这样在需要联网的时候就可以直接输入一个alias直接联网了。具体怎么实现每个人根据自己习惯来开发。</p>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>采用Github Action实现Hexo站点自动部署</title>
    <link href="/actions/hexo-auto-deploy/"/>
    <url>/actions/hexo-auto-deploy/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考了<a href="https://cloud.tencent.com/developer/article/2369534">这篇</a>和<a href="https://www.mulingyuer.com/archives/1065/">这篇</a>文章并自己改良了一下。</p></blockquote><h1 id="1-创建自己的GitHub-Token实现免认证登录"><a href="#1-创建自己的GitHub-Token实现免认证登录" class="headerlink" title="1. 创建自己的GitHub Token实现免认证登录"></a>1. 创建自己的GitHub Token实现免认证登录</h1><p>在GitHub中打开<a href="https://github.com/settings/tokens">tokens创建页</a>，创建新的token，勾选repo权限，然后复制生成的token。</p><h1 id="2-修改自己hexo项目的部署方式"><a href="#2-修改自己hexo项目的部署方式" class="headerlink" title="2. 修改自己hexo项目的部署方式"></a>2. 修改自己hexo项目的部署方式</h1><p>在本地hexo项目的根目录下找到_config.yml文件，修改deploy部分的内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">https://&#123;token&#125;@github.com/&#123;username&#125;/&#123;username&#125;.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><p>其中，{token}是第一步中生成的token，{username}是你的GitHub用户名。</p><h1 id="3-创建GitHub-Action"><a href="#3-创建GitHub-Action" class="headerlink" title="3. 创建GitHub Action"></a>3. 创建GitHub Action</h1><p>在hexo项目的根目录下创建.github&#x2F;workflows目录，然后在workflows目录下创建一个yml文件，文件名可以自定义，内容如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">name:</span> <span class="hljs-string">Blog</span> <span class="hljs-string">CI/CD</span> <span class="hljs-comment"># 脚本 workflow 名称</span><br><br><span class="hljs-attr">on:</span><br>  <span class="hljs-attr">push:</span><br>    <span class="hljs-attr">branches:</span> [<span class="hljs-string">main</span>, <span class="hljs-string">master</span>] <span class="hljs-comment"># 当监测 main,master 的 push</span><br>    <span class="hljs-attr">paths:</span> <span class="hljs-comment"># 监测的路径。</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;*.json&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**.yml&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/source/**&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/scaffolds/**&#x27;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;**/themes/**&#x27;</span><br><br><span class="hljs-attr">jobs:</span><br>  <span class="hljs-attr">deploy:</span> <span class="hljs-comment"># 任务名称</span><br>    <span class="hljs-attr">runs-on:</span> <span class="hljs-string">ubuntu-latest</span> <span class="hljs-comment"># 指定最新 ubuntu 系统</span><br>    <span class="hljs-attr">steps:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/checkout@v4</span> <span class="hljs-comment"># 拉取仓库代码</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Use</span> <span class="hljs-string">Node.js</span> <span class="hljs-number">18</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/setup-node@v4</span> <span class="hljs-comment"># 设置 node.js 环境</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-comment"># Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node</span><br>          <span class="hljs-comment"># Ref: https://github.com/actions/setup-node#supported-version-syntax</span><br>          <span class="hljs-attr">node-version:</span> <span class="hljs-string">&quot;18&quot;</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Cache</span> <span class="hljs-string">node_modules</span> <span class="hljs-comment"># 缓存 node_modules，提高编译速度，毕竟每月只有 2000 分钟。</span><br>        <span class="hljs-attr">uses:</span> <span class="hljs-string">actions/cache@v4</span> <span class="hljs-comment"># 亲测 Github 服务器编译速度比我自己电脑都快，如果每次构建按5分钟计算，我们每个月可以免费部署 400 次，Github yyds！！！</span><br>        <span class="hljs-attr">env:</span><br>          <span class="hljs-attr">cache-name:</span> <span class="hljs-string">cache-node-modules</span><br>        <span class="hljs-attr">with:</span><br>          <span class="hljs-attr">path:</span> <span class="hljs-string">~/.npm</span><br>          <span class="hljs-attr">key:</span> <span class="hljs-string">$&#123;&#123;</span> <span class="hljs-string">runner.os</span> <span class="hljs-string">&#125;&#125;-build-$&#123;&#123;</span> <span class="hljs-string">env.cache-name</span> <span class="hljs-string">&#125;&#125;-$&#123;&#123;</span> <span class="hljs-string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="hljs-string">&#125;&#125;</span><br>          <span class="hljs-attr">restore-keys:</span> <span class="hljs-string">|</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;-</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-build-</span><br><span class="hljs-string">            $&#123;&#123; runner.os &#125;&#125;-</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Dependencies</span> <span class="hljs-comment"># 安装源代码所需插件</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Install</span> <span class="hljs-string">Hexo-cli</span> <span class="hljs-comment"># 安装 Hexo</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">npm</span> <span class="hljs-string">install</span> <span class="hljs-string">-g</span> <span class="hljs-string">hexo-cli</span> <span class="hljs-string">--save</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Build</span> <span class="hljs-string">Blog</span> <span class="hljs-comment"># 编译创建静态博客文件</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          hexo clean</span><br><span class="hljs-string">          hexo g</span><br><span class="hljs-string"></span>      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">Deploy</span> <span class="hljs-string">Blog</span> <span class="hljs-comment"># 设置 git 信息并推送静态博客文件</span><br>        <span class="hljs-attr">run:</span> <span class="hljs-string">|</span><br><span class="hljs-string">          git config --global user.name &quot;ZXF1001&quot;</span><br><span class="hljs-string">          git config --global user.email &quot;1809996465@qq.com&quot;</span><br><span class="hljs-string">          hexo deploy</span><br><span class="hljs-string"></span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">run:</span> <span class="hljs-string">echo</span> <span class="hljs-string">&quot;Deploy Finished!&quot;</span><br></code></pre></td></tr></table></figure><h1 id="4-提交代码"><a href="#4-提交代码" class="headerlink" title="4. 提交代码"></a>4. 提交代码</h1><p>将修改后的hexo项目推送到GitHub，然后在GitHub中打开Actions页面，可以看到自动部署的过程。以后每次把更新提交到GitHub，GitHub Action都会自动部署hexo站点。可以从仓库的Action页面中看到部署的过程。</p>]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Paraview绘制100m等高面的风速云图</title>
    <link href="/plots/paraview-draw-100m-ws-contour/"/>
    <url>/plots/paraview-draw-100m-ws-contour/</url>
    
    <content type="html"><![CDATA[<blockquote><p><strong>需求:</strong> 使用openfoam计算了复杂地形场景下的风场，现在想要画出距离地面100m高度的曲面上的风速云图，并用Python进一步后处理</p></blockquote><h1 id="1-导入计算结果"><a href="#1-导入计算结果" class="headerlink" title="1. 导入计算结果"></a>1. 导入计算结果</h1><p>导入openfoam结果，在mesh regions中选择internalMesh和地表的patch，选择应用。</p><h1 id="2-提取地表"><a href="#2-提取地表" class="headerlink" title="2. 提取地表"></a>2. 提取地表</h1><p>插入一个extract block的filter，选择地表的patch，应用即可得到一个单独的地表。</p><h1 id="3-使用caculator获得向上平移100m的曲面"><a href="#3-使用caculator获得向上平移100m的曲面" class="headerlink" title="3. 使用caculator获得向上平移100m的曲面"></a>3. 使用caculator获得向上平移100m的曲面</h1><p>对上一步提取到的地表插入一个caculator的filter，勾选Coordinate Results，输入表达式<code>iHat*coordsX + jHat*coordsY + kHat*(coordsZ+100)</code>，选择应用，得到平移后的地表。</p><h1 id="4-使用Resample-With-Dataset将流场数据映射到新曲面上"><a href="#4-使用Resample-With-Dataset将流场数据映射到新曲面上" class="headerlink" title="4. 使用Resample With Dataset将流场数据映射到新曲面上"></a>4. 使用Resample With Dataset将流场数据映射到新曲面上</h1><p>插入一个Resample With Dataset的filter，源选择第一步中的流场数据，Destination Mesh选择第三步中的新曲面，选择应用。这时候应该能看到新曲面上有流场数据了。</p><h1 id="5-导出csv数据"><a href="#5-导出csv数据" class="headerlink" title="5. 导出csv数据"></a>5. 导出csv数据</h1><p>画面上只留下映射了数据的新曲面，File-&gt;Save Data，选择csv格式，保存想要的数据列。</p><h1 id="6-使用Python绘制云图"><a href="#6-使用Python绘制云图" class="headerlink" title="6. 使用Python绘制云图"></a>6. 使用Python绘制云图</h1><p>代码如下（仅参考，需要根据具体需求修改）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> scipy.interpolate <span class="hljs-keyword">import</span> griddata<br><br>data = pd.read_csv(<span class="hljs-string">&quot;./30m_h=100m.csv&quot;</span>)<br><span class="hljs-comment"># 提取坐标和风速向量</span><br>x = data[<span class="hljs-string">&#x27;Points:0&#x27;</span>]<br>y = data[<span class="hljs-string">&#x27;Points:1&#x27;</span>]<br>u = data[<span class="hljs-string">&#x27;U:0&#x27;</span>]<br>v = data[<span class="hljs-string">&#x27;U:1&#x27;</span>]<br>w = data[<span class="hljs-string">&#x27;U:2&#x27;</span>]<br><br><span class="hljs-comment"># 计算风速的大小（欧几里得范数）</span><br>wind_speed = np.sqrt(u**<span class="hljs-number">2</span> + v**<span class="hljs-number">2</span> + w**<span class="hljs-number">2</span>)<br><br><span class="hljs-comment"># 创建插值的网格</span><br>grid_x, grid_y = np.mgrid[x.<span class="hljs-built_in">min</span>():x.<span class="hljs-built_in">max</span>():<span class="hljs-number">100</span>, y.<span class="hljs-built_in">min</span>():y.<span class="hljs-built_in">max</span>():<span class="hljs-number">100</span>]<br><br><span class="hljs-comment"># 插值风速数据</span><br>grid_wind_speed = griddata((x, y), wind_speed, (grid_x, grid_y), method=<span class="hljs-string">&#x27;cubic&#x27;</span>)<br>grid_z = griddata((x, y), data[<span class="hljs-string">&#x27;Points:2&#x27;</span>], (grid_x, grid_y), method=<span class="hljs-string">&#x27;cubic&#x27;</span>)<br><br><span class="hljs-comment"># 绘制云图</span><br>plt.figure(figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">8</span>))<br>contourf = plt.contourf(grid_x, grid_y, grid_wind_speed, levels=<span class="hljs-number">20</span>, cmap=<span class="hljs-string">&#x27;viridis&#x27;</span>)<br></code></pre></td></tr></table></figure><p>如果想要绘制等高线，可以在最后加上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 添加等高线</span><br>contour = plt.contour(grid_x, grid_y, grid_z, levels=<span class="hljs-number">10</span>, colors=<span class="hljs-string">&#x27;black&#x27;</span>)<br>plt.clabel(contour, inline=<span class="hljs-literal">True</span>, fontsize=<span class="hljs-number">8</span>)<br></code></pre></td></tr></table></figure><p>如果想要绘制风向箭头，可以在最后加上：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 计算风向箭头的位置和大小</span><br><span class="hljs-comment"># 确定每个区域的中心点</span><br>num_arrows = <span class="hljs-number">10</span><br>x_centers = np.linspace(x.<span class="hljs-built_in">min</span>(), x.<span class="hljs-built_in">max</span>(), num_arrows)<br>y_centers = np.linspace(y.<span class="hljs-built_in">min</span>(), y.<span class="hljs-built_in">max</span>(), num_arrows)<br>X, Y = np.meshgrid(x_centers, y_centers)<br><br><span class="hljs-comment"># 对风速向量进行插值以得到箭头的方向</span><br>U = griddata((x, y), u, (X, Y), method=<span class="hljs-string">&#x27;cubic&#x27;</span>)<br>V = griddata((x, y), v, (X, Y), method=<span class="hljs-string">&#x27;cubic&#x27;</span>)<br><br><span class="hljs-comment"># 绘制表示风向的箭头</span><br>plt.quiver(X, Y, U, V, pivot=<span class="hljs-string">&#x27;middle&#x27;</span>, color=<span class="hljs-string">&#x27;white&#x27;</span>)<br></code></pre></td></tr></table></figure><p>最后输出图片：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 添加颜色条</span><br>plt.colorbar(contourf, label=<span class="hljs-string">&#x27;Wind Speed&#x27;</span>)<br><br><span class="hljs-comment"># 设置坐标轴标签和标题</span><br>plt.xlabel(<span class="hljs-string">&#x27;X Coordinate&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;Y Coordinate&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;Wind Speed Contour at 100m Elevation&#x27;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>科研绘图</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>在组里192服务器上安装OpenFOAM-6</title>
    <link href="/installations/openfoam-on-192-server/"/>
    <url>/installations/openfoam-on-192-server/</url>
    
    <content type="html"><![CDATA[<h1 id="在组里192服务器上安装OpenFOAM-6"><a href="#在组里192服务器上安装OpenFOAM-6" class="headerlink" title="在组里192服务器上安装OpenFOAM-6"></a>在组里192服务器上安装OpenFOAM-6</h1><blockquote><p>从《大集群上SOWFA安装》修改而来，小服务器上不需要自己编译很多库<br>OpenFOAM和SOWFA源码需要手动git clone下来上传到服务器的<code>~/OpenFOAM</code>文件夹</p></blockquote><h2 id="一-OpenFOAM-6安装"><a href="#一-OpenFOAM-6安装" class="headerlink" title="一. OpenFOAM-6安装"></a>一. OpenFOAM-6安装</h2><h3 id="1-设置环境变量"><a href="#1-设置环境变量" class="headerlink" title="1. 设置环境变量"></a>1. 设置环境变量</h3><p>设置调用的mpi库为小服务器上已经装好的的openmpi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> PATH=/opt/software/openmpi-4.0.2/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=/opt/software/openmpi-4.0.2/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br></code></pre></td></tr></table></figure><p>添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> <span class="hljs-variable">$HOME</span>/OpenFOAM/OpenFOAM-6/etc/bashrc WM_LABEL_SIZE=64<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;alias of6=&#x27;export PATH=/opt/software/openmpi-4.0.2/bin:\$PATH;export LD_LIBRARY_PATH=/opt/software/openmpi-4.0.2/lib:\$LD_LIBRARY_PATH;source \$HOME/OpenFOAM/OpenFOAM-6/etc/bashrc <span class="hljs-variable">$FOAM_SETTINGS</span>&#x27;&quot;</span> &gt;&gt; <span class="hljs-variable">$HOME</span>/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>以后每次想使用openfoam6，都要先执行<code>of6</code>命令激活环境变量</p><h3 id="3-安装第三方依赖库"><a href="#3-安装第三方依赖库" class="headerlink" title="3. 安装第三方依赖库"></a>3. 安装第三方依赖库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_THIRD_PARTY_DIR</span><br>./Allwmake &gt; log.make 2&gt;&amp;1 <span class="hljs-comment"># 可能会有报错，但是下一步中就会消失</span><br><span class="hljs-comment"># 再次安装输出安装报告，检查安装情况</span><br>./Allwmake<br></code></pre></td></tr></table></figure><h3 id="5-安装OpenFOAM"><a href="#5-安装OpenFOAM" class="headerlink" title="5. 安装OpenFOAM"></a>5. 安装OpenFOAM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_PROJECT_DIR</span><br>./Allwmake -j 32 &gt; log.make 2&gt;&amp;1 <span class="hljs-comment"># 32为编译用的核数</span><br><span class="hljs-comment"># 再次安装输出安装报告，检查安装情况</span><br>./Allwmake -j 32 <br></code></pre></td></tr></table></figure><p>创建run文件夹并进入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$FOAM_RUN</span><br>run<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>软件安装</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>WSL2相关操作指南</title>
    <link href="/actions/wsl2/"/>
    <url>/actions/wsl2/</url>
    
    <content type="html"><![CDATA[<h1 id="1-WSL2不通过微软商店安装Linux发行版"><a href="#1-WSL2不通过微软商店安装Linux发行版" class="headerlink" title="1. WSL2不通过微软商店安装Linux发行版"></a>1. WSL2不通过微软商店安装Linux发行版</h1><h1 id="2-WSL2导入-导出tar包"><a href="#2-WSL2导入-导出tar包" class="headerlink" title="2. WSL2导入&#x2F;导出tar包"></a>2. WSL2导入&#x2F;导出tar包</h1><ol><li>导出tar包 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">--export</span> &lt;distro_name&gt; &lt;path_to_save_tar&gt;<br></code></pre></td></tr></table></figure></li><li>导入tar包 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">--import</span> &lt;distro_name&gt; &lt;path_to_install&gt; &lt;path_to_tar&gt;<br></code></pre></td></tr></table></figure></li></ol><h1 id="3-WSL2移动Linux的安装位置"><a href="#3-WSL2移动Linux的安装位置" class="headerlink" title="3. WSL2移动Linux的安装位置"></a>3. WSL2移动Linux的安装位置</h1><p>通过第二点的方法移动到新的位置即可</p><h1 id="4-WSL2修改默认登陆用户"><a href="#4-WSL2修改默认登陆用户" class="headerlink" title="4. WSL2修改默认登陆用户"></a>4. WSL2修改默认登陆用户</h1><ol><li>在wsl的linux系统中创建<code>/etc/wsl.conf</code>文件，内容如下: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[user]<br>default=your_username<br></code></pre></td></tr></table></figure></li><li>退出wsl子系统，停止该子系统 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">-t</span> your_distro_name<br></code></pre></td></tr></table></figure></li><li>重新启动该子系统，即可使用新的默认用户登陆 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">wsl <span class="hljs-literal">-d</span> your_distro_name<br></code></pre></td></tr></table></figure></li></ol><h1 id="4-WSL2配置代理"><a href="#4-WSL2配置代理" class="headerlink" title="4. WSL2配置代理"></a>4. WSL2配置代理</h1><ol><li>在wsl的linux系统home目录下创建<code>.proxy_rc</code>文件，内容如下: <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>host_ip=$(<span class="hljs-built_in">cat</span> /etc/resolv.conf |grep <span class="hljs-string">&quot;nameserver&quot;</span> |<span class="hljs-built_in">cut</span> -f 2 -d <span class="hljs-string">&quot; &quot;</span>)<br><span class="hljs-comment"># 11223为windows宿主机的代理软件端口</span><br><span class="hljs-built_in">export</span> ALL_PROXY=<span class="hljs-string">&quot;http://<span class="hljs-variable">$host_ip</span>:11223&quot;</span><br></code></pre></td></tr></table></figure></li><li>需要使用代理的时候，执行<code>source ~/.proxy_rc</code>即可</li></ol>]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>VSCode相关操作</title>
    <link href="/actions/vscode/"/>
    <url>/actions/vscode/</url>
    
    <content type="html"><![CDATA[<h1 id="1-无网络下vscode-server安装"><a href="#1-无网络下vscode-server安装" class="headerlink" title="1. 无网络下vscode-server安装"></a>1. 无网络下vscode-server安装</h1><p>看<a href="https://zhuanlan.zhihu.com/p/294933020">这篇</a></p>]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>docker相关操作</title>
    <link href="/actions/docker/"/>
    <url>/actions/docker/</url>
    
    <content type="html"><![CDATA[<h1 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h1><ol><li><p>创建一个新的docker用户组，将当前用户添加到docker用户组</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo groupadd docker<br>sudo usermod -aG docker <span class="hljs-variable">$USER</span><br></code></pre></td></tr></table></figure></li><li><p>退出当前终端并重新登录以刷新用户组设置。</p></li><li><p>检查用户是否已经添加到Docker用户组：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">id</span> -nG<br></code></pre></td></tr></table></figure></li><li><p>如果有必要，更新apt软件仓库：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br></code></pre></td></tr></table></figure></li><li><p>安装Docker的依赖软件包：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common<br></code></pre></td></tr></table></figure></li><li><p>添加Docker的GPG密钥</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -<br></code></pre></td></tr></table></figure></li><li><p>将Docker软件源添加到Ubuntu 18.04的apt软件仓库</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>再次更新apt软件仓库</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br></code></pre></td></tr></table></figure></li><li><p>安装Docker CE</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install docker-ce<br></code></pre></td></tr></table></figure></li><li><p>启动Docker服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl status docker<br><span class="hljs-comment"># 或者</span><br>service docker status<br></code></pre></td></tr></table></figure></li><li><p>如果Docker服务没有启动，则可以使用以下命令启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start docker<br><span class="hljs-comment"># 或者</span><br>service docker start<br></code></pre></td></tr></table></figure><p>现在，非root用户也可以使用Docker了。</p></li><li><p>更换国内源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/docker/daemon.json<br></code></pre></td></tr></table></figure><p>在daemon.json中写入以下内容：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;registry-mirrors&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-string">&quot;http://hub-mirror.c.163.com/&quot;</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>保存退出后重启docker服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo service doocker restart<br></code></pre></td></tr></table></figure><p>检查是否生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker info|grep Mirrors -A 1<br></code></pre></td></tr></table></figure></li></ol><h1 id="2-创建网络"><a href="#2-创建网络" class="headerlink" title="2. 创建网络"></a>2. 创建网络</h1><ol><li>创建一个新的网络 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker network create app-network<br></code></pre></td></tr></table></figure></li><li>查看网络 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker network <span class="hljs-built_in">ls</span><br></code></pre></td></tr></table></figure></li><li>创建一个公共文件夹 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/public<br></code></pre></td></tr></table></figure></li></ol><h1 id="3-1-手动部署nginx-1-22"><a href="#3-1-手动部署nginx-1-22" class="headerlink" title="3.1 手动部署nginx-1.22"></a>3.1 手动部署nginx-1.22</h1><ol><li><p>拉取nginx镜像</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull nginx:1.22<br></code></pre></td></tr></table></figure></li><li><p>新建文件夹用来存放nginx配置文件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/nginx/conf<br><span class="hljs-built_in">mkdir</span> -p ~/Docker/nginx/log<br><span class="hljs-built_in">mkdir</span> -p ~/Docker/nginx/html<br></code></pre></td></tr></table></figure></li><li><p>先建一个容器，把其中的设置文件和静态网页拷贝出来</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/Docker/nginx<br>docker run --name c_nginx -p 80:80 -d nginx:1.22<br>docker <span class="hljs-built_in">cp</span> c_nginx:/etc/nginx/nginx.conf ~/Docker/nginx/conf<br>docker <span class="hljs-built_in">cp</span> c_nginx:/etc/nginx/conf.d ~/Docker/nginx/conf<br>docker <span class="hljs-built_in">cp</span> c_nginx:/usr/share/nginx/html ~/Docker/nginx<br></code></pre></td></tr></table></figure></li><li><p>停止并删除容器</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker stop c_nginx<br>docker <span class="hljs-built_in">rm</span> c_nginx<br></code></pre></td></tr></table></figure></li><li><p>启动nginx并加入网络</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name c_nginx \<br>-p 80:80 \<br>--network app-network \<br>--network-alias nginx \<br>-e TZ=Asia/Shanghai \<br>-v ~/Docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \<br>-v ~/Docker/nginx/conf/conf.d:/etc/nginx/conf.d \<br>-v ~/Docker/nginx/html:/usr/share/nginx/html \<br>-v ~/Docker/nginx/log:/var/log/nginx \<br>-v ~/Docker/public:/usr/share/nginx/public \<br>-d nginx:1.22<br></code></pre></td></tr></table></figure></li><li><p>查看nginx是否启动成功</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看宿主机ip</span><br>ifconfig<br></code></pre></td></tr></table></figure><p> 在浏览器中输入<code>http://宿主机ip</code>，如果出现<code>Welcome to nginx!</code>则说明启动成功。</p></li><li><p>编辑设置文件，代理静态资源<br>打开<code>~/Docker/nginx/conf/conf.d/default.conf</code>，在<code>location /</code>的大括号以下添加以下内容：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">location ~ (/geotiff/|/streamline/|/DEM/|/contour/) &#123;<br>    root   /usr/share/nginx/public;<br>    autoindex on;<br>    <span class="hljs-comment"># CORS config</span><br>    add_header <span class="hljs-string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="hljs-string">&#x27;GET,OPTIONS,POST&#x27;</span> always;<br>    add_header <span class="hljs-string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="hljs-string">&#x27;true&#x27;</span> always;<br>    add_header <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="hljs-variable">$http_origin</span> always;<br>    add_header <span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="hljs-string">&#x27;Authorization, Content-Type, X-Requested-With, Cache-Control&#x27;</span> always;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$request_method</span> = OPTIONS ) &#123; <span class="hljs-built_in">return</span> 200; &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p> 保存退出后重启nginx服务：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it c_nginx bash<br>nginx -s reload<br></code></pre></td></tr></table></figure><p> 在~&#x2F;Docker&#x2F;public下创建&#x2F;DEM文件夹，访问<code>http://宿主机ip/DEM/</code>，如果看见&#x2F;DEM目录下的文件列表则说明成功。</p></li></ol><h1 id="3-2-使用Dockerfile部署nginx-1-22"><a href="#3-2-使用Dockerfile部署nginx-1-22" class="headerlink" title="3.2 使用Dockerfile部署nginx-1.22"></a>3.2 使用Dockerfile部署nginx-1.22</h1><ol><li>在<code>~/Docker/nginx</code>下新建<code>conf</code>文件夹，用来存放nginx配置文件 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/nginx/conf<br></code></pre></td></tr></table></figure> 在conf&#x2F;conf.d里放入<code>default.conf</code>文件，在conf里放入<code>nginx.conf</code>文件</li><li>在<code>~/Docker/nginx</code>下新建<code>html</code>文件夹，放入你的静态网页 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/nginx/html<br></code></pre></td></tr></table></figure></li><li>在<code>~/Docker/nginx</code>下新建<code>Dockerfile</code>文件，内容如下： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">FROM nginx:1.22<br>RUN <span class="hljs-built_in">mkdir</span> -p /usr/share/nginx/public<br>COPY ./conf/nginx.conf /etc/nginx/nginx.conf<br>COPY ./conf/conf.d/ /etc/nginx/conf.d/<br>COPY ./html/ /usr/share/nginx/html/<br>EXPOSE 80<br></code></pre></td></tr></table></figure></li><li>构建镜像 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t my_nginx ~/Docker/nginx<br></code></pre></td></tr></table></figure></li><li>启动nginx并加入网络 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run --name c_nginx \<br>-p 80:80 \<br>--network app-network \<br>--network-alias nginx \<br>-e TZ=Asia/Shanghai \<br>-v ~/Docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf \<br>-v ~/Docker/nginx/conf/conf.d:/etc/nginx/conf.d \<br>-v ~/Docker/nginx/html:/usr/share/nginx/html \<br>-v ~/Docker/nginx/log:/var/log/nginx \<br>-v ~/Docker/public:/usr/share/nginx/public \<br>-d my_nginx<br></code></pre></td></tr></table></figure></li><li>如果有更新设置，更新设置后，重启nginx服务 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it c_nginx bash<br>nginx -s reload<br></code></pre></td></tr></table></figure></li></ol><h1 id="4-部署mysql-5-7-39"><a href="#4-部署mysql-5-7-39" class="headerlink" title="4. 部署mysql-5.7.39"></a>4. 部署mysql-5.7.39</h1><ol><li><p>拉取mysql镜像</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker pull mysql:5.7.39<br></code></pre></td></tr></table></figure></li><li><p>新建文件夹用来存放mysql配置文件和数据</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/mysql/data<br></code></pre></td></tr></table></figure></li><li><p>启动mysql，并加入网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d \<br>-p 3306:3306 \<br>--name=c_mysql \<br>--network app-network \<br>--network-alias mysql \<br>-v ~/Docker/mysql/data:/var/lib/mysql \<br>-e MYSQL_ROOT_PASSWORD=123456 \<br>-e TZ=Asia/Shanghai \<br>mysql:5.7.39 \<br>--character-set-server=utf8mb4 \<br>--collation-server=utf8mb4_unicode_ci<br></code></pre></td></tr></table></figure></li><li><p>等待十秒，等初始化完成，查看mysql是否启动成功</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker <span class="hljs-built_in">exec</span> -it c_mysql /bin/sh<br>mysql -uroot -p<br></code></pre></td></tr></table></figure><p> 没初始化完就进去可能不成功，退出重新等待几秒进入就能成功。如果出现<code>mysql&gt;</code>则说明启动成功。</p></li><li><p>禁止远程登录root，并创建远程用户</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs SQL">USE mysql;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">user</span>,host <span class="hljs-keyword">FROM</span> <span class="hljs-keyword">user</span>;<br><span class="hljs-keyword">DELETE</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">FROM</span> mysql.user <span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">user</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;root&#x27;</span> <span class="hljs-keyword">AND</span> host<span class="hljs-operator">=</span><span class="hljs-string">&#x27;%&#x27;</span>;<br><br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;zxf&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>  IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;zxf451001&#x27;</span>;<br><span class="hljs-keyword">CREATE</span> DATABASE `zxf` <span class="hljs-type">CHARACTER</span> <span class="hljs-keyword">SET</span> <span class="hljs-string">&#x27;utf8mb4&#x27;</span>;<br><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">ALL</span> PRIVILEGES <span class="hljs-keyword">ON</span> zxf.<span class="hljs-operator">*</span> <span class="hljs-keyword">TO</span> <span class="hljs-string">&#x27;zxf&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br>FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure></li></ol><h2 id="4-1-导入数据库"><a href="#4-1-导入数据库" class="headerlink" title="4.1 导入数据库"></a>4.1 导入数据库</h2><ol><li>将数据库文件拷贝到<code>~/Docker/mysql/data</code>下</li></ol><h1 id="5-Dockerfile部署mysql"><a href="#5-Dockerfile部署mysql" class="headerlink" title="5. Dockerfile部署mysql"></a>5. Dockerfile部署mysql</h1><ol><li><p>在目录下创建Dockerfile，内容如下</p> <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> mysql:<span class="hljs-number">5.7</span>.<span class="hljs-number">38</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /docker-entrypoint-initdb.d</span><br><span class="hljs-keyword">ENV</span> LANG=C.UTF-<span class="hljs-number">8</span><br><span class="hljs-keyword">ENV</span> TZ=Asia/Shanghai<br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> /mysql</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> import.sql /mysql</span><br><span class="hljs-keyword">ADD</span><span class="language-bash"> init.sql .</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">3306</span><br></code></pre></td></tr></table></figure></li><li><p>目录下放置init.sql（用于初始化的主文件，包括导入数据，创建用户，禁止root远程连接，改权限）和import.sql（要导入的数据）</p></li><li><p>打包</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t my_mysql .<br></code></pre></td></tr></table></figure></li><li><p>建立data文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/mysql/data<br></code></pre></td></tr></table></figure></li><li><p>运行容器</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run \<br>--name c_mysql \<br>--network app-network \<br>--network-alias mysql \<br>-v ~/Docker/mysql/data:/var/lib/mysql \<br>-p 3306:3306 \<br>-e MYSQL_ROOT_PASSWORD=123456 \<br>-d my_mysql \<br>--character-set-server=utf8mb4 \<br>--collation-server=utf8mb4_unicode_ci<br></code></pre></td></tr></table></figure></li></ol><h1 id="6-部署express后端服务（node-18-14-2）"><a href="#6-部署express后端服务（node-18-14-2）" class="headerlink" title="6. 部署express后端服务（node-18.14.2）"></a>6. 部署express后端服务（node-18.14.2）</h1><ol><li><p>创建文件夹</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/express/log<br></code></pre></td></tr></table></figure></li><li><p>新建Dockerfile</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/Docker/express/Dockerfile<br></code></pre></td></tr></table></figure><p> 写入以下内容：</p> <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> node:<span class="hljs-number">18.14</span>.<span class="hljs-number">2</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> ./app /app</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> /log</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">3000</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> npm run start &gt; /log/express.log 2&gt;&amp;1</span><br></code></pre></td></tr></table></figure></li><li><p>将项目拷贝到<code>~/Docker/express/app</code>下</p></li><li><p>构建镜像</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t my_express ~/Docker/express<br></code></pre></td></tr></table></figure></li><li><p>启动容器，并加入网络</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d \<br>--name c_express \<br>-e TZ=Asia/Shanghai \<br>-v ~/Docker/express/log:/log \<br>--network app-network \<br>--network-alias express \<br>my_express<br></code></pre></td></tr></table></figure><p> 如果进去就退出，可以把-d改成-it，去容器内部命令行检查问题原因（或者docker log）</p></li></ol><h1 id="7-部署node应用（qweather）"><a href="#7-部署node应用（qweather）" class="headerlink" title="7. 部署node应用（qweather）"></a>7. 部署node应用（qweather）</h1><ol><li>clone项目到<code>~/Docker/service/qweather</code>下 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://gitee.com/zxf001/wind-platform-service.git<br></code></pre></td></tr></table></figure> 并将文件夹重命名为app</li><li>将package.json中的nodemon改成node</li><li>新建Dockerfile <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/Docker/service/qweather/Dockerfile<br></code></pre></td></tr></table></figure> 写入以下内容： <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> node:<span class="hljs-number">18.14</span>.<span class="hljs-number">2</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> ./app /app</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /app</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> /log</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> npm run start &gt; /log/qweather.log 2&gt;&amp;1</span><br></code></pre></td></tr></table></figure></li><li>构建镜像 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t my_qweather ~/Docker/service/qweather<br></code></pre></td></tr></table></figure></li><li>创建log文件夹</li><li>启动容器，并加入网络 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d \<br>--name c_qweather \<br>--network app-network \<br>--network-alias qweather \<br>-e TZ=Asia/Shanghai \<br>-v ~/Docker/service/qweather/log:/log \<br>my_qweather<br></code></pre></td></tr></table></figure> 如果进去就退出，可以把-d改成-it，去容器内部命令行检查问题原因</li></ol><h1 id="8-部署python应用"><a href="#8-部署python应用" class="headerlink" title="8. 部署python应用"></a>8. 部署python应用</h1><ol><li><p>项目拷贝到<code>~/Docker/service/realtimeData</code>下</p><p> 并将文件名重命名为app.py</p></li><li><p>新建Dockerfile</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/Docker/service/realtimeData/Dockerfile<br></code></pre></td></tr></table></figure><p> 写入以下内容：</p> <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> python:<span class="hljs-number">3.6</span>.<span class="hljs-number">9</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> -p /runtime/log</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> .  /runtime</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /runtime</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> pip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> python app.py &gt; ./log/realtimeData.<span class="hljs-built_in">log</span> 2&gt;&amp;1</span><br><br></code></pre></td></tr></table></figure></li><li><p>构建镜像</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t my_realtimedata ~/Docker/service/realtimeData<br></code></pre></td></tr></table></figure></li><li><p>创建log文件夹</p></li><li><p>启动容器，并加入网络</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d \<br>--name c_realtimedata \<br>--network app-network \<br>--network-alias realtimedata \<br>-e TZ=Asia/Shanghai \<br>-v ~/Docker/service/realtimeData/log:/runtime/log \<br>my_realtimedata<br></code></pre></td></tr></table></figure><p> 如果进去就退出，可以把-d改成-it，去容器内部命令行检查问题原因</p></li></ol><h1 id="9-部署flask框架"><a href="#9-部署flask框架" class="headerlink" title="9. 部署flask框架"></a>9. 部署flask框架</h1><p>总体和部署python应用一样，只是导出requirements.txt的时候注意全部使用版本号的形式。</p><ol><li>在开发环境导出requirements.txt <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip list --format=freeze &gt; requirements.txt<br></code></pre></td></tr></table></figure> 其中，要把distribute，pip，setuptools，wheel这几个包删除，还要把pywin32这个删除。</li><li>项目拷贝到<code>~/Docker/flask</code>下<br> 并将文件夹重命名为app</li><li>创建日志文件夹 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/Docker/flask/log<br></code></pre></td></tr></table></figure></li><li>新建Dockerfile <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/Docker/flask/Dockerfile<br></code></pre></td></tr></table></figure> 写入以下内容： <figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs Dockerfile"><span class="hljs-keyword">FROM</span> python:<span class="hljs-number">3.10</span>.<span class="hljs-number">9</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> -p /runtime/app</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> <span class="hljs-built_in">mkdir</span> -p /runtime/log</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> requirements.txt /runtime</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> pip3 install -r /runtime/requirements.txt -i https://mirrors.aliyun.com/pypi/simple/</span><br><span class="hljs-keyword">COPY</span><span class="language-bash"> app /runtime/app</span><br><span class="hljs-keyword">EXPOSE</span> <span class="hljs-number">5000</span><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /runtime/app</span><br><span class="hljs-keyword">CMD</span><span class="language-bash"> python /runtime/app/app.py &gt; /runtime/log/flask.log 2&gt;&amp;1</span><br></code></pre></td></tr></table></figure></li><li>构建镜像 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker build -t my_flask ~/Docker/flask<br></code></pre></td></tr></table></figure></li><li>启动容器，并加入网络 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker run -d \<br>--name c_flask \<br>--network app-network \<br>--network-alias flask \<br>-e TZ=Asia/Shanghai \<br>-v ~/Docker/flask/log:/runtime/log \<br>my_flask<br></code></pre></td></tr></table></figure> 如果进去就退出，可以把-d改成-it，去容器内部命令行检查问题原因（或者docker log）</li></ol>]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Git相关</title>
    <link href="/actions/git/"/>
    <url>/actions/git/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Github被墙时，命令行环境下Git的代理配置"><a href="#1-Github被墙时，命令行环境下Git的代理配置" class="headerlink" title="1. Github被墙时，命令行环境下Git的代理配置"></a>1. Github被墙时，命令行环境下Git的代理配置</h1><p>就算挂了梯子，用命令行提交到git的时候也没有用，需要设置命令行代理：</p><ol><li>挂梯子</li><li>设置命令行代理： <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Powershell"><span class="hljs-comment">#端口号7890是梯子的端口号</span><br>git config <span class="hljs-literal">--global</span> http.proxy http://<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">7890</span><br>git config <span class="hljs-literal">--global</span> https.proxy https://<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">7890</span><br><br><span class="hljs-comment">#或者使用socks5的话输入下两行，具体我也不知道是什么含义</span><br>git config <span class="hljs-literal">--global</span> http.proxy <span class="hljs-string">&#x27;socks5://127.0.0.1:7890&#x27;</span><br>git config <span class="hljs-literal">--global</span> https.proxy <span class="hljs-string">&#x27;socks5://127.0.0.1:7890&#x27;</span><br><br><span class="hljs-comment"># 输入下面两行来取消代理</span><br>git config <span class="hljs-literal">--global</span> <span class="hljs-literal">--unset</span> http.proxy<br>git config <span class="hljs-literal">--global</span> <span class="hljs-literal">--unset</span> https.proxy<br></code></pre></td></tr></table></figure></li></ol><h1 id="2-本地仓库同时push到两个远程仓库（外网github和内网zjugit）"><a href="#2-本地仓库同时push到两个远程仓库（外网github和内网zjugit）" class="headerlink" title="2. 本地仓库同时push到两个远程仓库（外网github和内网zjugit）"></a>2. 本地仓库同时push到两个远程仓库（外网github和内网zjugit）</h1><blockquote><p>场景描述：在个人电脑上开发，需要提交到公网github（作为代码储存库）和内网zjugit（给内网服务器拉取来计算），在内网服务器上只拉取不修改不提交。</p></blockquote><ol><li><p>在个人电脑本地仓库添加两个远程储存库</p><p> 正常vscode+git的操作，添加远程储存库，这里添加两个，一个是github，一个是内网zjugit，分别命名为github和zjugit</p></li><li><p>在个人电脑上push代码到两个远程储存库</p><p> 由于github需要代理，内网zjugit不能开代理，需要写一个脚本方便随时切换，脚本可以就放在项目目录下</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># set_proxy</span><br>git config --global http.proxy http://127.0.0.1:7890<br>git config --global https.proxy http://127.0.0.1:7890<br></code></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># unset_proxy</span><br>git config --global --<span class="hljs-built_in">unset</span> http.proxy<br>git config --global --<span class="hljs-built_in">unset</span> https.proxy<br></code></pre></td></tr></table></figure><p> 然后就可以随时切换代理了，比如push到github就开代理，push到内网zjugit就关代理。github仓库正常提交代码，当想要去服务器上计算时，提交到内网zjugit。</p></li><li><p>在内网服务器上拉取代码</p><p> 第一次使用的时候，需要在服务器上使用命令行拉取代码</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> [url]<br></code></pre></td></tr></table></figure><p> 到服务器上使用命令行拉取代码</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git pull<br></code></pre></td></tr></table></figure><p> 然后可以在服务器上进行计算了。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL数据库相关操作</title>
    <link href="/actions/SQL/"/>
    <url>/actions/SQL/</url>
    
    <content type="html"><![CDATA[<h1 id="1-数据库忘记密码"><a href="#1-数据库忘记密码" class="headerlink" title="1. 数据库忘记密码"></a>1. 数据库忘记密码</h1><ol><li>关闭数据库：<code>service mysql stop</code></li><li>找到MySQL的位置文件：<code>find / -name my.cnf</code></li><li>添加一行<code>skip_grant_tables</code>，跳过数据库登录密码验证</li><li>启动数据库：<code>service mysql start</code></li><li>直接输入<code>mysql</code>登录数据库</li><li>重设root用户: <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">UPDATE</span> mysql.user<br><span class="hljs-keyword">SET</span> authentication_string<span class="hljs-operator">=</span>PASSWORD(<span class="hljs-string">&#x27;your_new_password&#x27;</span>)<br><span class="hljs-keyword">WHERE</span> <span class="hljs-keyword">user</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;root&#x27;</span> <span class="hljs-keyword">AND</span> host<span class="hljs-operator">=</span><span class="hljs-string">&#x27;localhost&#x27;</span>;<br>FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure></li><li>删除第3步添加的<code>skip_grant_tables</code></li><li>重启数据库<code>service mysql restart</code></li><li>使用新密码登录数据库<code>mysql -u root -p</code></li></ol><h1 id="2-数据库创建只读用户"><a href="#2-数据库创建只读用户" class="headerlink" title="2. 数据库创建只读用户"></a>2. 数据库创建只读用户</h1><p>需求场景:因为给root用户设置远程权限太危险(容易被删库勒索)，所以最好创建一个只能读写的用户进行远程连接。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">GRANT</span> <span class="hljs-keyword">CREATE</span>,<span class="hljs-keyword">SELECT</span>,<span class="hljs-keyword">INSERT</span><br><span class="hljs-keyword">ON</span> your_data_base.<span class="hljs-operator">*</span><br><span class="hljs-keyword">TO</span> username@&quot;%&quot;<br>IDENTIFIED <span class="hljs-keyword">BY</span> &quot;password&quot;;<br><br>FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><h1 id="3-常用MySQL语法-每个数据表结构不一样-这里能作为一个查询语句设计上的参考-具体要根据你的数据表结构来写SQL语句"><a href="#3-常用MySQL语法-每个数据表结构不一样-这里能作为一个查询语句设计上的参考-具体要根据你的数据表结构来写SQL语句" class="headerlink" title="3. 常用MySQL语法(每个数据表结构不一样,这里能作为一个查询语句设计上的参考,具体要根据你的数据表结构来写SQL语句)"></a>3. 常用MySQL语法(每个数据表结构不一样,这里能作为一个查询语句设计上的参考,具体要根据你的数据表结构来写SQL语句)</h1><ol><li>列举所有的测风塔   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <span class="hljs-keyword">DISTINCT</span> site <span class="hljs-keyword">FROM</span> zb_wind_data;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">------+</span><br>  <span class="hljs-operator">|</span> site <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">------+</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">0305</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">0307</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">------+</span><br></code></pre></td></tr></table></figure></li><li>查询0305测风塔所有的70m风速风向数据，按时间从早到晚排序（其他高度，其他测风塔同理）   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <span class="hljs-type">date</span>,<span class="hljs-type">time</span>,<span class="hljs-number">70</span>m_v_avg,<span class="hljs-number">70</span>m_deg_avg<br><span class="hljs-keyword">FROM</span> zb_wind_data  <br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-type">date</span> <span class="hljs-keyword">ASC</span>,<span class="hljs-type">time</span> <span class="hljs-keyword">ASC</span>;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">------------+----------+-----------+-------------+</span><br>  <span class="hljs-operator">|</span>  <span class="hljs-number">2016</span><span class="hljs-number">-1</span><span class="hljs-number">-1</span>  <span class="hljs-operator">|</span> <span class="hljs-number">00</span>:<span class="hljs-number">10</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>       <span class="hljs-number">7.2</span> <span class="hljs-operator">|</span>         <span class="hljs-number">171</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>    ...     <span class="hljs-operator">|</span>   ...    <span class="hljs-operator">|</span>    ...    <span class="hljs-operator">|</span>     ...     <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-operator">|</span> <span class="hljs-number">23</span>:<span class="hljs-number">20</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>       <span class="hljs-number">6.5</span> <span class="hljs-operator">|</span>         <span class="hljs-number">236</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-operator">|</span> <span class="hljs-number">23</span>:<span class="hljs-number">30</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>         <span class="hljs-number">8</span> <span class="hljs-operator">|</span>         <span class="hljs-number">239</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-operator">|</span> <span class="hljs-number">23</span>:<span class="hljs-number">40</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>         <span class="hljs-number">7</span> <span class="hljs-operator">|</span>         <span class="hljs-number">227</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-operator">|</span> <span class="hljs-number">23</span>:<span class="hljs-number">50</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>       <span class="hljs-number">8.3</span> <span class="hljs-operator">|</span>         <span class="hljs-number">235</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">------------+----------+-----------+-------------+</span><br><span class="hljs-number">52147</span> <span class="hljs-keyword">rows</span> <span class="hljs-keyword">in</span> <span class="hljs-keyword">set</span> (<span class="hljs-number">0.23</span> sec)<br></code></pre></td></tr></table></figure></li><li>查询0305测风塔的70m风速数据总条数   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-number">70</span>m_v_avg)<br><span class="hljs-keyword">AS</span> total_num<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">-----------+</span><br>  <span class="hljs-operator">|</span> total_num <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">-----------+</span><br>  <span class="hljs-operator">|</span>     <span class="hljs-number">52147</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">-----------+</span><br></code></pre></td></tr></table></figure></li><li>查询0305测风塔的70m风速在[3,5)区间内的计数   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-number">70</span>m_v_avg)<br><span class="hljs-keyword">AS</span> selected_num<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;<br><span class="hljs-keyword">AND</span> <span class="hljs-number">70</span>m_v_avg<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span><br><span class="hljs-keyword">AND</span> <span class="hljs-number">70</span>m_v_avg<span class="hljs-operator">&lt;</span><span class="hljs-number">5</span>;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">--------------+</span><br>  <span class="hljs-operator">|</span> selected_num <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">--------------+</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">12509</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">--------------+</span><br></code></pre></td></tr></table></figure></li><li>查询最新时间前一小时的0305测风塔的70m风速风向数据 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-keyword">AS</span> datetime,<br><span class="hljs-number">70</span>m_v_avg <span class="hljs-keyword">AS</span> speed,<br><span class="hljs-number">70</span>m_deg_avg <span class="hljs-keyword">AS</span> degree<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot; <br><span class="hljs-keyword">AND</span> TIMESTAMPDIFF(<br>  <span class="hljs-keyword">HOUR</span>,<br>  str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>),<br>  (<br>    <span class="hljs-keyword">SELECT</span><br>    <span class="hljs-built_in">MAX</span>(str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>))<br>    <span class="hljs-keyword">FROM</span> zb_wind_data<br>  )<br>)<span class="hljs-operator">&lt;</span><span class="hljs-number">1</span><br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-type">date</span> <span class="hljs-keyword">ASC</span>,<span class="hljs-type">time</span> <span class="hljs-keyword">ASC</span>;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-----------+-------------+</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>       <span class="hljs-number">6.2</span> <span class="hljs-operator">|</span>         <span class="hljs-number">231</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">10</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>       <span class="hljs-number">6.3</span> <span class="hljs-operator">|</span>         <span class="hljs-number">234</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">20</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>       <span class="hljs-number">6.5</span> <span class="hljs-operator">|</span>         <span class="hljs-number">236</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">30</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>         <span class="hljs-number">8</span> <span class="hljs-operator">|</span>         <span class="hljs-number">239</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">40</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>         <span class="hljs-number">7</span> <span class="hljs-operator">|</span>         <span class="hljs-number">227</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">50</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>       <span class="hljs-number">8.3</span> <span class="hljs-operator">|</span>         <span class="hljs-number">235</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-----------+-------------+</span><br></code></pre></td></tr></table></figure></li><li>查询指定日期时间区间内(2016.10.18 23:10-2016.10.19 00:40)的0305测风塔的70m风速风向数据   <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-keyword">AS</span> datetime,<br><span class="hljs-number">70</span>m_v_avg <span class="hljs-keyword">AS</span> speed,<br><span class="hljs-number">70</span>m_deg_avg <span class="hljs-keyword">AS</span> degree<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;<br><span class="hljs-keyword">AND</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>)<br><span class="hljs-keyword">BETWEEN</span> str_to_date(<span class="hljs-string">&#x27;2016-9-28 23:0:0&#x27;</span>,<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>)<br><span class="hljs-keyword">AND</span> str_to_date(<span class="hljs-string">&#x27;2016-10-2 01:0:0&#x27;</span>,<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>)<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> <span class="hljs-type">date</span> <span class="hljs-keyword">ASC</span>,<span class="hljs-type">time</span> <span class="hljs-keyword">ASC</span>;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-------+--------+</span><br>  <span class="hljs-operator">|</span> datetime            <span class="hljs-operator">|</span> speed <span class="hljs-operator">|</span> degree <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-------+--------+</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-28</span> <span class="hljs-number">23</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>   <span class="hljs-number">5.8</span> <span class="hljs-operator">|</span>    <span class="hljs-number">178</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-28</span> <span class="hljs-number">23</span>:<span class="hljs-number">10</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>   <span class="hljs-number">5.6</span> <span class="hljs-operator">|</span>    <span class="hljs-number">175</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-28</span> <span class="hljs-number">23</span>:<span class="hljs-number">20</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>   <span class="hljs-number">5.9</span> <span class="hljs-operator">|</span>    <span class="hljs-number">172</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-28</span> <span class="hljs-number">23</span>:<span class="hljs-number">30</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>   <span class="hljs-number">6.6</span> <span class="hljs-operator">|</span>    <span class="hljs-number">173</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-28</span> <span class="hljs-number">23</span>:<span class="hljs-number">40</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>   <span class="hljs-number">7.5</span> <span class="hljs-operator">|</span>    <span class="hljs-number">174</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-28</span> <span class="hljs-number">23</span>:<span class="hljs-number">50</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>   <span class="hljs-number">7.7</span> <span class="hljs-operator">|</span>    <span class="hljs-number">173</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-29</span> <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>   <span class="hljs-number">7.8</span> <span class="hljs-operator">|</span>    <span class="hljs-number">173</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-09</span><span class="hljs-number">-29</span> <span class="hljs-number">00</span>:<span class="hljs-number">10</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>     <span class="hljs-number">8</span> <span class="hljs-operator">|</span>    <span class="hljs-number">173</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         ...         <span class="hljs-operator">|</span>  ...  <span class="hljs-operator">|</span>   ...  <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-------+--------+</span><br></code></pre></td></tr></table></figure></li><li>在所有数据中查询0305测风塔70m的风向频率统计 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> ROUND(<span class="hljs-number">70</span>m_deg_avg<span class="hljs-operator">/</span><span class="hljs-number">22.5</span>)<span class="hljs-operator">%</span><span class="hljs-number">16</span> <span class="hljs-keyword">AS</span> direction,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-number">70</span>m_v_avg) <span class="hljs-keyword">AS</span> f<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> ROUND(<span class="hljs-number">70</span>m_deg_avg<span class="hljs-operator">/</span><span class="hljs-number">22.5</span>)<span class="hljs-operator">%</span><span class="hljs-number">16</span>;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">-----------+------+</span><br>  <span class="hljs-operator">|</span> direction <span class="hljs-operator">|</span> f    <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">-----------+------+</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">0</span> <span class="hljs-operator">|</span> <span class="hljs-number">4161</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">1</span> <span class="hljs-operator">|</span> <span class="hljs-number">3549</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">2</span> <span class="hljs-operator">|</span> <span class="hljs-number">1440</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">3</span> <span class="hljs-operator">|</span>  <span class="hljs-number">295</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">4</span> <span class="hljs-operator">|</span>  <span class="hljs-number">227</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">5</span> <span class="hljs-operator">|</span>  <span class="hljs-number">436</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">6</span> <span class="hljs-operator">|</span>  <span class="hljs-number">903</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">7</span> <span class="hljs-operator">|</span> <span class="hljs-number">3608</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">8</span> <span class="hljs-operator">|</span> <span class="hljs-number">8693</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">9</span> <span class="hljs-operator">|</span> <span class="hljs-number">6376</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">10</span> <span class="hljs-operator">|</span> <span class="hljs-number">2225</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">11</span> <span class="hljs-operator">|</span> <span class="hljs-number">1854</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">12</span> <span class="hljs-operator">|</span> <span class="hljs-number">2432</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">13</span> <span class="hljs-operator">|</span> <span class="hljs-number">4484</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">14</span> <span class="hljs-operator">|</span> <span class="hljs-number">5415</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">15</span> <span class="hljs-operator">|</span> <span class="hljs-number">6049</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">-----------+------+</span><br></code></pre></td></tr></table></figure></li><li>查询日期范围内0305测风塔的70m风速风向数据，对在[3-5)m&#x2F;s的风速，按风向所在扇区分组统计频率 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> ROUND(<span class="hljs-number">70</span>m_deg_avg<span class="hljs-operator">/</span><span class="hljs-number">22.5</span>)<span class="hljs-operator">%</span><span class="hljs-number">16</span> <span class="hljs-keyword">AS</span> direction,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-number">70</span>m_v_avg)<br><span class="hljs-operator">/</span><br>(<br>  <span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">COUNT</span>(<span class="hljs-number">70</span>m_v_avg)<br>  <span class="hljs-keyword">FROM</span> zb_wind_data<br>  <span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;<br>  <span class="hljs-keyword">AND</span> <span class="hljs-number">70</span>m_v_avg<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span><br>  <span class="hljs-keyword">AND</span> <span class="hljs-number">70</span>m_v_avg<span class="hljs-operator">&lt;</span><span class="hljs-number">15</span><br>  <span class="hljs-keyword">AND</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-operator">&gt;</span>  <span class="hljs-string">&#x27;2016-10-18 23:0:0&#x27;</span><br>  <span class="hljs-keyword">AND</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-operator">&lt;</span>  <span class="hljs-string">&#x27;2016-11-19 00:0:0&#x27;</span><br>) <span class="hljs-keyword">AS</span> f<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;<br><span class="hljs-keyword">AND</span> <span class="hljs-number">70</span>m_v_avg<span class="hljs-operator">&gt;=</span><span class="hljs-number">3</span><br><span class="hljs-keyword">AND</span> <span class="hljs-number">70</span>m_v_avg<span class="hljs-operator">&lt;</span><span class="hljs-number">15</span><br><span class="hljs-keyword">AND</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-operator">&gt;=</span>  <span class="hljs-string">&#x27;2016-10-18 23:0:0&#x27;</span><br><span class="hljs-keyword">AND</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-operator">&lt;</span>  <span class="hljs-string">&#x27;2016-11-19 00:0:0&#x27;</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> ROUND(<span class="hljs-number">70</span>m_deg_avg<span class="hljs-operator">/</span><span class="hljs-number">22.5</span>)<span class="hljs-operator">%</span><span class="hljs-number">16</span>;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">-----------+--------+</span><br>  <span class="hljs-operator">|</span> direction <span class="hljs-operator">|</span> f      <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">-----------+--------+</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">0</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0496</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">1</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0255</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">2</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0082</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">3</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0007</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">4</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0015</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">5</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0052</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">6</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0119</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">7</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0655</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">8</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.1860</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>         <span class="hljs-number">9</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.1309</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">10</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0687</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">11</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0687</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">12</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0806</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">13</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0754</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">14</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.0965</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>        <span class="hljs-number">15</span> <span class="hljs-operator">|</span> <span class="hljs-number">0.1252</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">-----------+--------+</span><br></code></pre></td></tr></table></figure></li><li>查询所有的高度字段（要求既有风速又有风向） <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> height<br><span class="hljs-keyword">FROM</span> (<br>  <span class="hljs-keyword">SELECT</span> SUBSTRING_INDEX(<br>    COLUMN_NAME,<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-number">1</span><br>  ) <span class="hljs-keyword">AS</span> height<br>  <span class="hljs-keyword">FROM</span> information_schema.COLUMNS<br>  <span class="hljs-keyword">WHERE</span> TABLE_NAME <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;zb_wind_data&#x27;</span><br>  <span class="hljs-keyword">AND</span> (<br>    COLUMN_NAME <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%_v_avg&#x27;</span><br>    <span class="hljs-keyword">OR</span><br>    COLUMN_NAME <span class="hljs-keyword">LIKE</span> <span class="hljs-string">&#x27;%_deg_avg&#x27;</span><br>  )<br>) <span class="hljs-keyword">AS</span> T<br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> height<br><span class="hljs-keyword">HAVING</span> <span class="hljs-built_in">COUNT</span>(height)<span class="hljs-operator">=</span><span class="hljs-number">2</span>;<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">--------+</span><br>  <span class="hljs-operator">|</span> height <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">--------+</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">10</span>m    <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">40</span>m    <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span> <span class="hljs-number">70</span>m    <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">--------+</span><br><br></code></pre></td></tr></table></figure></li><li>查询0305测风塔70m高度第1扇区（NNE）在2016-2-1 13:00至2016-2-10 19:00时间范围内的风速分布<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> <span class="hljs-built_in">FLOOR</span>(<span class="hljs-number">70</span>m_v_avg) <span class="hljs-keyword">AS</span> rangeStart,<br><span class="hljs-built_in">COUNT</span>(<span class="hljs-built_in">FLOOR</span>(<span class="hljs-number">70</span>m_v_avg)) <span class="hljs-keyword">AS</span> count<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot;<br><span class="hljs-keyword">AND</span> ROUND(<span class="hljs-number">70</span>m_deg_avg<span class="hljs-operator">/</span><span class="hljs-number">22.5</span>)<span class="hljs-operator">%</span><span class="hljs-number">16</span><span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-keyword">AND</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-operator">&gt;=</span> <span class="hljs-string">&#x27;2016-2-1 13:0:0&#x27;</span><br><span class="hljs-keyword">AND</span> str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>) <span class="hljs-operator">&lt;</span> <span class="hljs-string">&#x27;2016-2-10 19:0:0&#x27;</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> <span class="hljs-built_in">FLOOR</span>(<span class="hljs-number">70</span>m_v_avg);<br><br><span class="hljs-operator">&gt;</span> <span class="hljs-operator">+</span><span class="hljs-comment">------------+-------+</span><br>  <span class="hljs-operator">|</span> rangeStart <span class="hljs-operator">|</span> count <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">------------+-------+</span><br>  <span class="hljs-operator">|</span>          <span class="hljs-number">2</span> <span class="hljs-operator">|</span>     <span class="hljs-number">2</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>          <span class="hljs-number">4</span> <span class="hljs-operator">|</span>     <span class="hljs-number">1</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>          <span class="hljs-number">5</span> <span class="hljs-operator">|</span>     <span class="hljs-number">5</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>          <span class="hljs-number">6</span> <span class="hljs-operator">|</span>     <span class="hljs-number">1</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">|</span>          <span class="hljs-number">7</span> <span class="hljs-operator">|</span>     <span class="hljs-number">1</span> <span class="hljs-operator">|</span><br>  <span class="hljs-operator">+</span><span class="hljs-comment">------------+-------+</span><br></code></pre></td></tr></table></figure></li><li>按照最近某段时间不同的时间粒度（1小时&#x2F;1天）返回速度均值<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs SQL"><span class="hljs-keyword">SELECT</span> str_to_date(<br>  CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-keyword">HOUR</span>(<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;:&#x27;</span>,<span class="hljs-keyword">MINUTE</span>(<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;:&#x27;</span>,<span class="hljs-keyword">SECOND</span>(<span class="hljs-type">time</span>)),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span><br>  ) <span class="hljs-keyword">AS</span> datetime,<br>ROUND(<span class="hljs-built_in">AVG</span>(<span class="hljs-number">70</span>m_v_avg),<span class="hljs-number">2</span>) <span class="hljs-keyword">AS</span> speed,<br>ROUND(<span class="hljs-built_in">AVG</span>(<span class="hljs-number">70</span>m_v_max),<span class="hljs-number">2</span>) <span class="hljs-keyword">AS</span> maxSpeed,<br>ROUND(<span class="hljs-built_in">AVG</span>(<span class="hljs-number">70</span>m_v_min),<span class="hljs-number">2</span>) <span class="hljs-keyword">AS</span> minSpeed,<br>ROUND(<span class="hljs-built_in">AVG</span>(<span class="hljs-number">70</span>m_deg_avg),<span class="hljs-number">2</span>) <span class="hljs-keyword">AS</span> degree<br><span class="hljs-keyword">FROM</span> zb_wind_data<br><span class="hljs-keyword">WHERE</span> site<span class="hljs-operator">=</span>&quot;0305&quot; <br><span class="hljs-keyword">AND</span> TIMESTAMPDIFF(<br>  <span class="hljs-keyword">HOUR</span>,<br>  str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>),<br>  (<br>    <span class="hljs-keyword">SELECT</span><br>    <span class="hljs-built_in">MAX</span>(str_to_date(CONCAT(<span class="hljs-type">date</span>,<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-type">time</span>),<span class="hljs-string">&#x27;%Y-%m-%d %H:%i:%s&#x27;</span>))<br>    <span class="hljs-keyword">FROM</span> zb_wind_data<br>  )<br>)<span class="hljs-operator">&lt;</span><span class="hljs-number">1</span><br><span class="hljs-keyword">GROUP</span> <span class="hljs-keyword">BY</span> datetime<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> datetime <span class="hljs-keyword">ASC</span>;<br><br><span class="hljs-operator">&gt;</span><br><span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-------------------+--------+</span><br><span class="hljs-operator">|</span> datetime            <span class="hljs-operator">|</span> speed             <span class="hljs-operator">|</span> degree <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-------------------+--------+</span><br><span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span> <span class="hljs-number">6.199999809265137</span> <span class="hljs-operator">|</span>    <span class="hljs-number">231</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">10</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span> <span class="hljs-number">6.300000190734863</span> <span class="hljs-operator">|</span>    <span class="hljs-number">234</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">20</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>               <span class="hljs-number">6.5</span> <span class="hljs-operator">|</span>    <span class="hljs-number">236</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">30</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>                 <span class="hljs-number">8</span> <span class="hljs-operator">|</span>    <span class="hljs-number">239</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">40</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span>                 <span class="hljs-number">7</span> <span class="hljs-operator">|</span>    <span class="hljs-number">227</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">|</span> <span class="hljs-number">2016</span><span class="hljs-number">-12</span><span class="hljs-number">-31</span> <span class="hljs-number">23</span>:<span class="hljs-number">50</span>:<span class="hljs-number">00</span> <span class="hljs-operator">|</span> <span class="hljs-number">8.300000190734863</span> <span class="hljs-operator">|</span>    <span class="hljs-number">235</span> <span class="hljs-operator">|</span><br><span class="hljs-operator">+</span><span class="hljs-comment">---------------------+-------------------+--------+</span><br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux相关操作记录</title>
    <link href="/actions/Linux/"/>
    <url>/actions/Linux/</url>
    
    <content type="html"><![CDATA[<h1 id="1-服务如何常驻、终止"><a href="#1-服务如何常驻、终止" class="headerlink" title="1. 服务如何常驻、终止"></a>1. 服务如何常驻、终止</h1><ol><li>通过screen指令可以让服务在后端长时间运行： <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">screen -S name <span class="hljs-comment"># 以name为代号开一个进程</span><br>screen -r name <span class="hljs-comment"># 重新打开name为代号的进程</span><br></code></pre></td></tr></table></figure></li><li>或者通过nohup指令后台运行 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> <span class="hljs-built_in">command</span> &gt; log.command 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure></li><li>终止后台运行的nodemon进程 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -ef | grep nodemon <span class="hljs-comment">#查找名为nodemon的进程,记下进程号</span><br><span class="hljs-built_in">kill</span> 12345 <span class="hljs-comment">#杀掉进程</span><br></code></pre></td></tr></table></figure></li></ol><h1 id="2-本地客户端免密登录远程服务器"><a href="#2-本地客户端免密登录远程服务器" class="headerlink" title="2. 本地客户端免密登录远程服务器"></a>2. 本地客户端免密登录远程服务器</h1><p><a href="https://blog.csdn.net/qq_40451749/article/details/89348799">参考这篇文章</a></p><h1 id="3-tar打包和解压"><a href="#3-tar打包和解压" class="headerlink" title="3. tar打包和解压"></a>3. tar打包和解压</h1><ul><li>打包：<code>tar -czvf name.tar.gz dir</code>，其中<code>c</code>表示打包，<code>z</code>表示使用gzip压缩，<code>v</code>表示显示打包过程，<code>f</code>表示指定打包后的文件名</li><li>解压tar.gz文件：<code>tar -xzvf name.tar.gz</code>，其中<code>x</code>表示解压，<code>z</code>表示使用gzip解压，<code>v</code>表示显示解压过程，<code>f</code>表示指定解压的文件名</li></ul>]]></content>
    
    
    <categories>
      
      <category>操作记录</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>PyWake和TOPFARM安装</title>
    <link href="/installations/pywake-topfarm/"/>
    <url>/installations/pywake-topfarm/</url>
    
    <content type="html"><![CDATA[<h1 id="安装PyWake"><a href="#安装PyWake" class="headerlink" title="安装PyWake"></a>安装PyWake</h1><ol><li><p>创建环境</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n pywake python=3.8<br>conda activate pywake<br></code></pre></td></tr></table></figure></li><li><p>（<a href="https://topfarm.pages.windenergy.dtu.dk/PyWake/installation.html">官网安装说明</a>）直接pip安装</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install py_wake<br></code></pre></td></tr></table></figure></li><li><p>验证安装<br>如果想验证一下是否安装成功，可以执行以下步骤：</p><ol><li>进入python环境  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python<br></code></pre></td></tr></table></figure></li><li>在python命令行测试是否能成功运行quickstart案例  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 测试整个包能否import成功，耗时可能较长</span><br><span class="hljs-keyword">import</span> py_wake<br><br><span class="hljs-comment"># 进行一个quickstart算例测试</span><br><span class="hljs-keyword">from</span> py_wake.examples.data.hornsrev1 <span class="hljs-keyword">import</span> Hornsrev1Site, V80, wt16_x, wt16_y<br><span class="hljs-keyword">from</span> py_wake <span class="hljs-keyword">import</span> NOJ<br>windTurbines = V80()<br>site = Hornsrev1Site()<br>noj = NOJ(site,windTurbines)<br>simulationResult = noj(wt16_x,wt16_y)<br>simulationResult.aep()<br><span class="hljs-comment"># 成功输出发电量数据数据，表示安装成功</span><br></code></pre></td></tr></table></figure></li></ol></li></ol><h1 id="（可选，需要使用优化功能时安装）安装TOPFARM"><a href="#（可选，需要使用优化功能时安装）安装TOPFARM" class="headerlink" title="（可选，需要使用优化功能时安装）安装TOPFARM"></a>（可选，需要使用优化功能时安装）安装TOPFARM</h1><ol><li><p>切换环境</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate pywake<br></code></pre></td></tr></table></figure></li><li><p>安装（<a href="https://topfarm.pages.windenergy.dtu.dk/TopFarm2/installation.html">官网安装说明</a>）</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install topfarm<br></code></pre></td></tr></table></figure></li><li><p>验证安装</p><p> 如果想验证一下是否安装成功，可以执行以下步骤：</p><ol><li>进入python环境<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python<br></code></pre></td></tr></table></figure></li><li>在python命令行测试是否能成功运行quickstart案例<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 测试整个包能否import成功，耗时可能较长</span><br><span class="hljs-keyword">import</span> topfarm<br><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">from</span> py_wake.deficit_models.gaussian <span class="hljs-keyword">import</span> IEA37SimpleBastankhahGaussian<br><span class="hljs-keyword">from</span> py_wake.examples.data.iea37 <span class="hljs-keyword">import</span> IEA37_WindTurbines, IEA37Site<br><span class="hljs-keyword">from</span> topfarm.cost_models.py_wake_wrapper <span class="hljs-keyword">import</span> PyWakeAEPCostModelComponent<br><span class="hljs-keyword">from</span> topfarm <span class="hljs-keyword">import</span> TopFarmProblem<br><span class="hljs-keyword">from</span> topfarm.easy_drivers <span class="hljs-keyword">import</span> EasyScipyOptimizeDriver<br><span class="hljs-keyword">from</span> topfarm.examples.iea37 <span class="hljs-keyword">import</span> get_iea37_initial, get_iea37_constraints, get_iea37_cost<br><span class="hljs-keyword">from</span> topfarm.plotting <span class="hljs-keyword">import</span> NoPlot<br>n_wt = <span class="hljs-number">9</span><br>n_wd = <span class="hljs-number">16</span><br>site = IEA37Site(<span class="hljs-number">9</span>)<br>wind_turbines = IEA37_WindTurbines()<br>wd = np.linspace(<span class="hljs-number">0.</span>,<span class="hljs-number">360.</span>,n_wd, endpoint=<span class="hljs-literal">False</span>)<br>wfmodel = IEA37SimpleBastankhahGaussian(site, wind_turbines)<br>cost_comp = PyWakeAEPCostModelComponent(wfmodel, n_wt, wd=wd)<br>initial = get_iea37_initial(n_wt)<br>driver = EasyScipyOptimizeDriver()<br>design_vars = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(<span class="hljs-string">&#x27;xy&#x27;</span>, (initial[:, :<span class="hljs-number">2</span>]).T))<br>tf_problem = TopFarmProblem(<br>            design_vars,<br>            cost_comp,<br>            constraints=get_iea37_constraints(n_wt),<br>            driver=driver,<br>            plot_comp=NoPlot())<br>_, state, _ = tf_problem.optimize()<br><span class="hljs-comment"># 成功输出优化结果，表示安装成功</span><br></code></pre></td></tr></table></figure></li><li>测试完成后，会在当前路径下产生一个reports文件夹和一个openmdao文件，可以删掉</li></ol></li></ol>]]></content>
    
    
    <categories>
      
      <category>软件安装</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>大集群上SOWFA安装</title>
    <link href="/installations/SOWFA-on-cluster/"/>
    <url>/installations/SOWFA-on-cluster/</url>
    
    <content type="html"><![CDATA[<h1 id="大集群上OpenFOAM-2-4-x和SOWFA的安装（无网络、无sudo权限）"><a href="#大集群上OpenFOAM-2-4-x和SOWFA的安装（无网络、无sudo权限）" class="headerlink" title="大集群上OpenFOAM-2.4.x和SOWFA的安装（无网络、无sudo权限）"></a>大集群上OpenFOAM-2.4.x和SOWFA的安装（无网络、无sudo权限）</h1><h2 id="〇-准备工作"><a href="#〇-准备工作" class="headerlink" title="〇. 准备工作"></a>〇. 准备工作</h2><p>根据以下下载链接下载安装包和依赖库的源码（如果链接失效，可以网上找对应版本的安装包下载），使用sftp工具上传到服务器的<code>~/uploads</code>文件夹</p><p><a href="http://mirror.linux-ia64.org/gnu/gcc/releases/gcc-4.8.5/gcc-4.8.5.tar.gz">gcc-4.8.5</a>、<br><a href="https://codeload.github.com/jbeder/yaml-cpp/tar.gz/refs/tags/yaml-cpp-0.6.0">yaml-cpp-0.6.0</a>、<br><a href="https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.15/src/hdf5-1.8.15.tar.gz">hdf5-1.8.15</a>、<br><a href="http://xmlsoft.org/sources/libxml2-2.8.0.tar.gz">libxml2-2.8.0</a>、<br><a href="https://codeload.github.com/Reference-LAPACK/lapack/tar.gz/refs/tags/v3.10.1">lapack-3.10.1</a>、<br><a href="https://codeload.github.com/OpenFAST/openfast/tar.gz/refs/tags/v2.4.0">openfast-2.4.0</a>、<br><a href="https://mirrors.sjtug.sjtu.edu.cn/gnu/mpc/mpc-1.0.1.tar.gz">mpc-1.0.1</a>、<br><a href="https://www.mpfr.org/mpfr-3.1.2/mpfr-3.1.2.tar.gz">mpfr-3.1.2</a>、<a href="https://mirrors.aliyun.com/gnu/gmp/gmp-5.1.2.tar.xz?spm=a2c6h.25603864.0.0.34897154FANPT7">gmp-5.1.2</a>、<br><a href="https://codeload.github.com/CGAL/cgal/tar.gz/refs/tags/releases/CGAL-4.6">CGAL-4.6</a>、<br><a href="https://udomain.dl.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2">boost-1.55.0</a>、<br><a href="https://www.labri.fr/perso/pelegrin/scotch/distrib/scotch_6.0.3.tar.gz">scotch_6.0.3</a>、<br><a href="https://cmake.org/files/v3.26/cmake-3.26.3-linux-x86_64.sh">cmake-3.26.3</a></p><p>另外，OpenFOAM和SOWFA源码的压缩包保存在了<a href="https://github.com/ZXF1001/SOWFA_Installation_Files">这个github仓库</a>中，下载下来，也上传到服务器的<code>~/uploads</code>文件夹</p><h2 id="一-OpenFOAM2-4-x安装-基于此网站的步骤，有修改"><a href="#一-OpenFOAM2-4-x安装-基于此网站的步骤，有修改" class="headerlink" title="一. OpenFOAM2.4.x安装(基于此网站的步骤，有修改)"></a>一. OpenFOAM2.4.x安装(基于<a href="https://openfoamwiki.net/index.php/Installation/Linux/OpenFOAM-2.4.x/CentOS_SL_RHEL#CentOS_7.1">此网站</a>的步骤，有修改)</h2><h3 id="0-注意：安装OpenFOAM前先检查一下-bashrc中有没有激活其他版本的cmake和gcc，如果有，先注释掉改用大服务器自带的gcc-4-8-5（在-usr-bin-gcc）和cmake-2-8-12-2（在-usr-bin-cmake）"><a href="#0-注意：安装OpenFOAM前先检查一下-bashrc中有没有激活其他版本的cmake和gcc，如果有，先注释掉改用大服务器自带的gcc-4-8-5（在-usr-bin-gcc）和cmake-2-8-12-2（在-usr-bin-cmake）" class="headerlink" title="0. 注意：安装OpenFOAM前先检查一下~&#x2F;.bashrc中有没有激活其他版本的cmake和gcc，如果有，先注释掉改用大服务器自带的gcc-4.8.5（在&#x2F;usr&#x2F;bin&#x2F;gcc）和cmake-2.8.12.2（在&#x2F;usr&#x2F;bin&#x2F;cmake）"></a>0. 注意：安装OpenFOAM前先检查一下~&#x2F;.bashrc中有没有激活其他版本的cmake和gcc，如果有，先注释掉改用大服务器自带的gcc-4.8.5（在&#x2F;usr&#x2F;bin&#x2F;gcc）和cmake-2.8.12.2（在&#x2F;usr&#x2F;bin&#x2F;cmake）</h3><h3 id="1-拷贝OpenFOAM2-4-x和ThirdParty-2-4-x源码并解压"><a href="#1-拷贝OpenFOAM2-4-x和ThirdParty-2-4-x源码并解压" class="headerlink" title="1. 拷贝OpenFOAM2.4.x和ThirdParty-2.4.x源码并解压"></a>1. 拷贝OpenFOAM2.4.x和ThirdParty-2.4.x源码并解压</h3><p>将<code>~/uploads</code>目录下OpenFOAM和ThirdParty的压缩包拷贝到OpenFOAM的安装目录下，解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/OpenFOAM &amp;&amp; <span class="hljs-built_in">cd</span> ~/OpenFOAM<br>tar -zxvf ~/uploads/OpenFOAM-2.4.x.tar.gz<br>tar -zxvf ~/uploads/ThirdParty-2.4.x.tar.gz<br></code></pre></td></tr></table></figure><h3 id="2-准备第三方依赖库"><a href="#2-准备第三方依赖库" class="headerlink" title="2. 准备第三方依赖库"></a>2. 准备第三方依赖库</h3><p>将<code>~/uploads</code>目录下的几个依赖库的压缩包解压到<code>~/OpenFOAM/ThirdParty-2.4.x</code>目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/OpenFOAM/ThirdParty-2.4.x<br>tar -zxvf ~/uploads/scotch_6.0.3.tar.gz<br>tar -zxvf ~/uploads/cgal-releases-CGAL-4.6.tar.gz &amp;&amp; <span class="hljs-built_in">mv</span> cgal-releases-CGAL-4.6 CGAL-4.6<br>tar -jxvf ~/uploads/boost_1_55_0.tar.bz2<br>tar -zxvf ~/uploads/gcc-4.8.5.tar.gz<br>tar -xvf ~/uploads/gmp-5.1.2.tar.xz<br>tar -zxvf ~/uploads/mpfr-3.1.2.tar.gz<br>tar -zxvf ~/uploads/mpc-1.0.1.tar.gz<br></code></pre></td></tr></table></figure><h4 id="2-1-编译安装openmpi-2-1-1（如果服务器上已经有openmpi，可以不用自己安装，只需要激活环境变量即可）"><a href="#2-1-编译安装openmpi-2-1-1（如果服务器上已经有openmpi，可以不用自己安装，只需要激活环境变量即可）" class="headerlink" title="2.1 编译安装openmpi-2.1.1（如果服务器上已经有openmpi，可以不用自己安装，只需要激活环境变量即可）"></a>2.1 编译安装openmpi-2.1.1（如果服务器上已经有openmpi，可以不用自己安装，只需要激活环境变量即可）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/Packages &amp;&amp; <span class="hljs-built_in">cd</span> ~/Packages<br>tar -zxvf ~/uploads/openmpi-2.1.1.tar.gz<br><span class="hljs-built_in">cd</span> openmpi-2.1.1<br><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>../configure --prefix=<span class="hljs-variable">$HOME</span>/Packages/openmpi-2.1.1/install --with-ucx=/usr/local/ucx<br>make<br>make install<br></code></pre></td></tr></table></figure><p>激活环境变量，在~&#x2F;.bashrc文件末尾添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># OpenMPI</span><br><span class="hljs-built_in">export</span> PATH=~/Packages/openmpi-2.1.1/install/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=~/Packages/openmpi-2.1.1/install/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br><span class="hljs-built_in">export</span> INCLUDE=~/Packages/openmpi-2.1.1/install/include/:<span class="hljs-variable">$INCLUDE</span><br><span class="hljs-built_in">export</span> CPATH=~/Packages/openmpi-2.1.1/install/include/:<span class="hljs-variable">$CPATH</span><br><span class="hljs-built_in">export</span> MANPATH=~/Packages/openmpi-2.1.1/install/share/man:<span class="hljs-variable">$MANPATH</span><br></code></pre></td></tr></table></figure><p>使修改生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h3 id="3-设置环境变量"><a href="#3-设置环境变量" class="headerlink" title="3. 设置环境变量"></a>3. 设置环境变量</h3><p>修改源码中的boost版本和gcc版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/OpenFOAM<br>sed -i -e <span class="hljs-string">&#x27;s=boost-system=boost_1_55_0=&#x27;</span> OpenFOAM-2.4.x/etc/config/CGAL.sh<br>sed -i -e <span class="hljs-string">&#x27;s=gcc\-4\.8\.2=gcc-4.8.5=&#x27;</span> OpenFOAM-2.4.x/etc/config/settings.sh（这句执行完去验证一下这个文件第245行有没有改成4.8.5）<br></code></pre></td></tr></table></figure><p>编辑bashrc文件，设置intel编译器和设置调用的mpi库为大服务器上的openmpi-2.1.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/.bashrc<br></code></pre></td></tr></table></figure><p>在文件末尾添加以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Intel compiler</span><br><span class="hljs-built_in">source</span> /opt/intel/parallel_studio_xe_2020/bin/psxevars.sh intel64<br></code></pre></td></tr></table></figure><p>使修改生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><p>添加OpenFOAM环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 这里的WM_NCOMPPROCS设置为你编译要用的核数（大集群使用手册说不要在主节点上并行，故设为单核） </span><br><span class="hljs-built_in">source</span> <span class="hljs-variable">$HOME</span>/OpenFOAM/OpenFOAM-2.4.x/etc/bashrc WM_NCOMPPROCS=1 WM_LABEL_SIZE=64<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;alias of24x=&#x27;source \$HOME/OpenFOAM/OpenFOAM-2.4.x/etc/bashrc <span class="hljs-variable">$FOAM_SETTINGS</span>&#x27;&quot;</span> &gt;&gt; <span class="hljs-variable">$HOME</span>/.bashrc<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;of24x&#x27;</span> &gt;&gt; <span class="hljs-variable">$HOME</span>/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc <br>of24x<br></code></pre></td></tr></table></figure><h3 id="4-安装第三方依赖库"><a href="#4-安装第三方依赖库" class="headerlink" title="4. 安装第三方依赖库"></a>4. 安装第三方依赖库</h3><p>通过makeGcc脚本编译安装CGAL需要的gmp和mpfr库（可能在最后编译安装gcc的时候会报错，可以不用管，因为需要的是前面的gmp和mpfr库）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_THIRD_PARTY_DIR</span><br>./makeGcc gcc-4.8.5 gmp-5.1.2 mpfr-3.1.2 mpc-1.0.1<br></code></pre></td></tr></table></figure><p>修改编译cgal要用到的库版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i -e <span class="hljs-string">&#x27;s=boost-system=boost_1_55_0=&#x27;</span> makeCGAL<br>sed -i -e <span class="hljs-string">&#x27;s=gmp-system=gmp-5.1.2=&#x27;</span> makeCGAL<br>sed -i -e <span class="hljs-string">&#x27;s=mpfr-system=mpfr-3.1.2=&#x27;</span> makeCGAL<br></code></pre></td></tr></table></figure><p>编译第三方依赖库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./Allwmake<br><span class="hljs-comment"># 再次安装输出安装报告，检查安装情况</span><br>./Allwmake &gt; log.make 2&gt;&amp;1<br></code></pre></td></tr></table></figure><h3 id="5-安装OpenFOAM"><a href="#5-安装OpenFOAM" class="headerlink" title="5. 安装OpenFOAM"></a>5. 安装OpenFOAM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_PROJECT_DIR</span><br>./Allwmake<br><span class="hljs-comment"># 再次安装输出安装报告，检查安装情况</span><br>./Allwmake &gt; log.make 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>可能会出现<code>fatal error: gmp.h: No such file or directory</code>，会影响非结构化网格的生成工具<code>foamyHexMesh</code>和<code>foamyQuadMesh</code>，如果不用的话影响不大</p><p>创建run文件夹并进入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p <span class="hljs-variable">$FOAM_RUN</span><br>run<br></code></pre></td></tr></table></figure><h3 id="6-测试"><a href="#6-测试" class="headerlink" title="6. 测试"></a>6. 测试</h3><h4 id="icoFoam单核算例"><a href="#icoFoam单核算例" class="headerlink" title="icoFoam单核算例"></a>icoFoam单核算例</h4><p>拷贝测试算例并生成网格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r <span class="hljs-variable">$FOAM_TUTORIALS</span>/incompressible/icoFoam/cavity <span class="hljs-variable">$FOAM_RUN</span><br><span class="hljs-built_in">cd</span> cavity<br>blockMesh<br></code></pre></td></tr></table></figure><p>当前目录下创建提交脚本script.sh，内容如下（将<code>#$ -N zxf</code>中的<code>zxf</code>修改为你的任务名），其他参数的设置以及注意点看组里服务器的使用要求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh </span><br><span class="hljs-comment">#___INFO__MARK_BEGIN__</span><br><span class="hljs-comment"># Welcome to use  EasyCluster V1.6 All Rights Reserved.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#___INFO__MARK_END__</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#$ -S /bin/sh </span><br><span class="hljs-comment">#$ -N zxf </span><br><span class="hljs-comment">#$ -j y </span><br><span class="hljs-comment">#$ -o ./ </span><br><span class="hljs-comment">#$ -e ./ </span><br><span class="hljs-comment">#$ -cwd  </span><br><span class="hljs-comment">#$ -q zone2.q  </span><br><span class="hljs-comment">#$ -pe thread 1</span><br><br><span class="hljs-built_in">source</span> ~/.bashrc<br><span class="hljs-built_in">hash</span> -r<br><span class="hljs-built_in">export</span> path=<span class="hljs-variable">$TMPDIR</span>:<span class="hljs-variable">$path</span><br><br>icoFoam &gt; log.icoFoam 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>提交、查询任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 提交任务</span><br>ssub script.sh<br><br><span class="hljs-comment">#查询任务状态</span><br>qstat<br></code></pre></td></tr></table></figure><h4 id="并行测试，damBreak算例"><a href="#并行测试，damBreak算例" class="headerlink" title="并行测试，damBreak算例"></a>并行测试，damBreak算例</h4><p>拷贝测试算例并生成网格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r <span class="hljs-variable">$FOAM_TUTORIALS</span>/multiphase/interFoam/laminar/damBreak <span class="hljs-variable">$FOAM_RUN</span><br><span class="hljs-built_in">cd</span> damBreak<br>blockMesh<br><span class="hljs-built_in">cp</span> -r 0/alpha.water.org 0/alpha.water<br>setFields<br>decomposePar<br></code></pre></td></tr></table></figure><p>在当前目录下创建提交脚本script.sh，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh </span><br><span class="hljs-comment">#___INFO__MARK_BEGIN__</span><br><span class="hljs-comment"># Welcome to use  EasyCluster V1.6 All Rights Reserved.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#___INFO__MARK_END__</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#$ -S /bin/sh </span><br><span class="hljs-comment">#$ -N zxf_openfoam_test </span><br><span class="hljs-comment">#$ -j y </span><br><span class="hljs-comment">#$ -o ./ </span><br><span class="hljs-comment">#$ -e ./ </span><br><span class="hljs-comment">#$ -cwd  </span><br><span class="hljs-comment">#$ -q zone2.q  </span><br><span class="hljs-comment">#$ -pe mpi 4-4</span><br><span class="hljs-built_in">source</span> ~/.bashrc<br><span class="hljs-built_in">hash</span> -r<br><span class="hljs-built_in">export</span> path=<span class="hljs-variable">$TMPDIR</span>:<span class="hljs-variable">$path</span><br><br>mpirun -np <span class="hljs-variable">$NSLOTS</span> interFoam -parallel &gt; log.interFoam 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>提交、查询任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 提交任务</span><br>ssub script.sh<br><br><span class="hljs-comment">#查询任务状态</span><br>qstat<br></code></pre></td></tr></table></figure><p>计算完成后，使用reconstructPar命令重建数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">reconstructPar<br><span class="hljs-comment"># 可以将数据文件下载到本地，用paraview查看</span><br></code></pre></td></tr></table></figure><h2 id="二-OpenFAST安装"><a href="#二-OpenFAST安装" class="headerlink" title="二. OpenFAST安装"></a>二. OpenFAST安装</h2><h3 id="1-安装依赖"><a href="#1-安装依赖" class="headerlink" title="1. 安装依赖"></a>1. 安装依赖</h3><h4 id="解压依赖库安装包"><a href="#解压依赖库安装包" class="headerlink" title="解压依赖库安装包"></a>解压依赖库安装包</h4><p>建议创建一个依赖库的总的安装目录，可以运行下面的命令创建（这里用Packages文件夹，如果用其他名字注意安装过程中对应把Packages改成你的文件夹名）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> <span class="hljs-variable">$HOME</span>/Packages<br></code></pre></td></tr></table></figure><p>将<code>~/upload</code>目录下的下列安装包解压到<code>$HOME/Packages/</code>目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span>/Packages/<br>tar -zxvf ~/upload/lapack-3.10.1.tar.gz<br>tar -zxvf ~/upload/libxml2-v2.8.0.tar.gz<br><span class="hljs-built_in">mv</span> libxml2-v2.8.0 libxml2-2.8.0<br>tar -zxf ~/upload/hdf5-1.8.15.tar.gz<br>tar -zxf ~/upload/yaml-cpp-yaml-cpp-0.6.0.tar.gz<br><span class="hljs-built_in">mv</span> yaml-cpp-yaml-cpp-0.6.0 yaml-cpp-0.6.0<br><span class="hljs-built_in">cp</span> ~/upload/cmake-3.26.3-linux-x86_64.sh ./<br></code></pre></td></tr></table></figure><h4 id="BLAS-LAPACK"><a href="#BLAS-LAPACK" class="headerlink" title="BLAS&amp;LAPACK"></a>BLAS&amp;LAPACK</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span>/Packages/lapack-3.10.1<br><span class="hljs-built_in">cp</span> make.inc.example make.inc<br><span class="hljs-comment"># 默认直接安装到$HOME/Packages/lapack-3.10.1目录下</span><br>make blaslib<br>make lapacklib<br></code></pre></td></tr></table></figure><h4 id="LibXml2"><a href="#LibXml2" class="headerlink" title="LibXml2"></a>LibXml2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span>/Packages/libxml2-2.8.0<br><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>../configure --prefix=<span class="hljs-variable">$HOME</span>/Packages/libxml2-2.8.0/install<br>make<br>make install<br></code></pre></td></tr></table></figure><h4 id="HDF5"><a href="#HDF5" class="headerlink" title="HDF5"></a>HDF5</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span>/Packages/hdf5-1.8.15<br><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>../configure --prefix=<span class="hljs-variable">$HOME</span>/Packages/hdf5-1.8.15/install<br>make<br>make check<br>make install<br></code></pre></td></tr></table></figure><h4 id="yaml-cpp"><a href="#yaml-cpp" class="headerlink" title="yaml-cpp"></a>yaml-cpp</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span>/Packages/yaml-cpp-0.6.0<br><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>cmake .. \<br>-DCMAKE_INSTALL_PREFIX=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Packages/yaml-cpp-0.6.0/install&quot;</span> \<br>-DBUILD_SHARED_LIBS=ON <br>make<br>make install<br></code></pre></td></tr></table></figure><h4 id="cmake-3-26-3"><a href="#cmake-3-26-3" class="headerlink" title="cmake-3.26.3"></a>cmake-3.26.3</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$HOME</span>/Packages<br><span class="hljs-built_in">chmod</span> +x ./cmake-3.26.3-linux-x86_64.sh<br><span class="hljs-comment"># 执行安装脚本，路径保持默认，装在当前目录下</span><br>./cmake-3.26.3-linux-x86_64.sh<br><span class="hljs-comment"># 要调用新版本cmake可以通过他的绝对路径~/Packages/cmake-3.26.3-linux-x86_64/bin/cmake进行调用</span><br></code></pre></td></tr></table></figure><h3 id="2-安装OpenFAST-2-4-0"><a href="#2-安装OpenFAST-2-4-0" class="headerlink" title="2. 安装OpenFAST-2.4.0"></a>2. 安装OpenFAST-2.4.0</h3><p>将<code>~/upload/openfast-2.4.0.tar.gz</code>解压到安装目录下，这里以安装到<code>$HOME/Programs</code>为例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/Programs &amp;&amp; <span class="hljs-built_in">cd</span> ~/Programs<br>tar -zxvf ~/upload/openfast-2.4.0.tar.gz<br><span class="hljs-built_in">cd</span> openfast-2.4.0<br></code></pre></td></tr></table></figure><p>进入编译文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br></code></pre></td></tr></table></figure><p>配置编译选项（注意这里的依赖库路径要和你的依赖库安装的路径对应）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">~/Packages/cmake-3.26.3-linux-x86_64/bin/cmake .. \<br>-DBLAS_LIBRARIES=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Packages/lapack-3.10.1&quot;</span> \<br>-DLAPACK_LIBRARIES=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Packages/lapack-3.10.1&quot;</span> \<br>-DLIBXML2_LIBRARY=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Packages/libxml2-2.8.0/install/lib&quot;</span> \<br>-DLIBXML2_INCLUDE_DIR=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Packages/libxml2-2.8.0/install/include/libxml2/libxml&quot;</span> \<br>-DBUILD_OPENFAST_CPP_API=ON \<br>-DHDF5_ROOT=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Packages/hdf5-1.8.15/install&quot;</span> \<br>-DYAML_ROOT=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Packages/yaml-cpp-0.6.0/install&quot;</span> \<br>-DCMAKE_C_COMPILER=icc \<br>-DCMAKE_CXX_COMPILER=icpc \<br>-DCMAKE_Fortran_COMPILER=ifort \<br>-DBUILD_SHARED_LIBS=ON \<br>-DCMAKE_BUILD_TYPE=Release \<br>-DFPE_TRAP_ENABLED=ON \<br>-DCMAKE_INSTALL_PREFIX=<span class="hljs-string">&quot;<span class="hljs-variable">$HOME</span>/Programs/openfast-2.4.0/install&quot;</span> \<br>-DOPENMP=ON<br></code></pre></td></tr></table></figure><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">make<br>make install<br></code></pre></td></tr></table></figure><p>没有报error即为安装成功</p><h2 id="三-SOWFA的安装"><a href="#三-SOWFA的安装" class="headerlink" title="三. SOWFA的安装"></a>三. SOWFA的安装</h2><h3 id="1-拷贝源码"><a href="#1-拷贝源码" class="headerlink" title="1. 拷贝源码"></a>1. 拷贝源码</h3><p>将<code>~/upload/SOWFA.tar.gz</code>解压到SOWFA安装目录下，这里安装到<code>~/OpenFOAM</code>目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/OpenFOAM<br>tar -zxvf ~/upload/SOWFA.tar.gz<br><span class="hljs-built_in">cd</span> SOWFA<br></code></pre></td></tr></table></figure><h3 id="2-修改源码错误"><a href="#2-修改源码错误" class="headerlink" title="2. 修改源码错误"></a>2. 修改源码错误</h3><p>详见<a href="https://github.com/pablo-benito/SOWFA-installation#sowfa-compilation">这篇文档</a>，修改源码的部分错误再编译，要修改的三个文件分别为：</p><ol><li><code>applications/solvers/incompressible/windEnergy/pisoFoamTurbine.ALMAdvancedOpenFAST/Make/options</code></li><li><code>applications/solvers/incompressible/windEnergy/windPlantSolver.ALMAdvancedOpenFAST/Make/options</code></li><li><code>src/turbineModels/turbineModelsOpenFAST/Make/options</code></li></ol><h3 id="3-创建-bashrc中的启动命令"><a href="#3-创建-bashrc中的启动命令" class="headerlink" title="3. 创建.bashrc中的启动命令"></a>3. 创建.bashrc中的启动命令</h3><p>在<code>$HOME</code>目录下创建<code>.sowfarc</code>文件，内容如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> inst_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br><span class="hljs-built_in">export</span> sowfa_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br><br><span class="hljs-comment"># Unset OpenFOAM environment variables.</span><br><span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$FOAM_INST_DIR</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Nothing to unset...&quot;</span><br><span class="hljs-keyword">else</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;*Unsetting OpenFOAM environment variables...&quot;</span><br>   . <span class="hljs-variable">$FOAM_INST_DIR</span>/OpenFOAM-2.4.x/etc/config/unset.sh<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># Set the OpenFOAM version and installation directory</span><br><span class="hljs-built_in">export</span> OPENFOAM_VERSION=2.4.x<br><span class="hljs-built_in">export</span> OPENFOAM_NAME=OpenFOAM-<span class="hljs-variable">$OPENFOAM_VERSION</span><br><span class="hljs-built_in">export</span> FOAM_INST_DIR=<span class="hljs-variable">$inst_loc</span><br><span class="hljs-built_in">export</span> WM_PROJECT_USER_DIR=<span class="hljs-variable">$sowfa_loc</span>/SOWFA<br><br>foamDotFile=<span class="hljs-variable">$FOAM_INST_DIR</span>/<span class="hljs-variable">$OPENFOAM_NAME</span>/etc/bashrc<br><span class="hljs-keyword">if</span> [ -f <span class="hljs-variable">$foamDotFile</span> ] ; <span class="hljs-keyword">then</span><br>   <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Sourcing <span class="hljs-variable">$foamDotFile</span>...&quot;</span><br>   <span class="hljs-built_in">source</span> <span class="hljs-variable">$foamDotFile</span><br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">export</span> WM_NCOMPPROCS=1<br><span class="hljs-built_in">export</span> WM_COLOURS=<span class="hljs-string">&quot;white blue green cyan red magenta yellow&quot;</span><br><br><span class="hljs-built_in">alias</span> tut=<span class="hljs-string">&#x27;cd $sowfa_loc/SOWFA/exampleCases&#x27;</span><br><br><span class="hljs-built_in">export</span> SOWFA_DIR=<span class="hljs-variable">$sowfa_loc</span>/SOWFA<br><span class="hljs-built_in">export</span> SOWFA_APPBIN=<span class="hljs-variable">$SOWFA_DIR</span>/applications/bin/<span class="hljs-variable">$WM_OPTIONS</span><br><span class="hljs-built_in">export</span> SOWFA_LIBBIN=<span class="hljs-variable">$SOWFA_DIR</span>/lib/<span class="hljs-variable">$WM_OPTIONS</span><br><span class="hljs-built_in">export</span> OPENFAST_DIR=<span class="hljs-variable">$HOME</span>/Programs/openfast-2.4.0/install<br><span class="hljs-built_in">export</span> HDF5_DIR=<span class="hljs-variable">$HOME</span>/Packages/hdf5-1.8.15/install<br><br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$SOWFA_LIBBIN</span>:<span class="hljs-variable">$OPENFAST_DIR</span>/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$SOWFA_APPBIN</span>:<span class="hljs-variable">$OPENFAST_DIR</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>把SOWFA环境启动命令加入到<code>~/.bashrc</code>文件中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;alias sf24x = &#x27;of24x &amp;&amp; source ~/.sowfarc&#x27;&quot;</span> &gt;&gt; ~/.bashrc<br></code></pre></td></tr></table></figure><p>更新<code>~/.bashrc</code>文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><h3 id="4-执行安装"><a href="#4-执行安装" class="headerlink" title="4. 执行安装"></a>4. 执行安装</h3><p>设置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sf24x<br></code></pre></td></tr></table></figure><p>编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$SOWFA_DIR</span><br>./Allwmake<br></code></pre></td></tr></table></figure><p>再次执行来查看各个求解器安装情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./Allwmake<br></code></pre></td></tr></table></figure><p>未来每次需要使用SOWFA的时候都要输入<code>sf24x</code>来激活环境</p><h3 id="5-测试案例"><a href="#5-测试案例" class="headerlink" title="5. 测试案例"></a>5. 测试案例</h3><h4 id="复制大气边界层案例到运行目录下"><a href="#复制大气边界层案例到运行目录下" class="headerlink" title="复制大气边界层案例到运行目录下"></a>复制大气边界层案例到运行目录下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r <span class="hljs-variable">$SOWFA_DIR</span>/exampleCases/example.ABL.flatTerrain.neutral <span class="hljs-variable">$FOAM_RUN</span>/<br>run<br><span class="hljs-built_in">cd</span> example.ABL.flatTerrain.neutral<br></code></pre></td></tr></table></figure><h4 id="修改runscript-preprocess文件"><a href="#修改runscript-preprocess文件" class="headerlink" title="修改runscript.preprocess文件"></a>修改runscript.preprocess文件</h4><p>注释掉第13行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># OpenFOAMversion=2.4.x-central</span><br></code></pre></td></tr></table></figure><p>注释掉第71-80行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># if [ $parallel -eq 1 ]</span><br><span class="hljs-comment">#    then</span><br><span class="hljs-comment">#    cd $PBS_O_WORKDIR</span><br><span class="hljs-comment"># fi</span><br><br><br><span class="hljs-comment"># # Source the bash profile and then call the appropriate OpenFOAM version function</span><br><span class="hljs-comment"># # so that all the modules and environment variables get set.</span><br><span class="hljs-comment"># source $HOME/.bash_profile</span><br><span class="hljs-comment"># OpenFOAM-$OpenFOAMversion</span><br></code></pre></td></tr></table></figure><h4 id="修改runscript-solve-1文件"><a href="#修改runscript-solve-1文件" class="headerlink" title="修改runscript.solve.1文件"></a>修改runscript.solve.1文件</h4><p>为了在集群上并行运行，改成了如下模板（可以把<code>#$ -N zxf</code>中的<code>zxf</code>改成你要的任务名，把<code>#$ -pe mpi 8-8</code>中的两个8改成你的核数），其他设置和注意点参考组里服务器的使用说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh </span><br><span class="hljs-comment">#___INFO__MARK_BEGIN__</span><br><span class="hljs-comment"># Welcome to use  EasyCluster V1.6 All Rights Reserved.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#___INFO__MARK_END__</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#$ -S /bin/sh </span><br><span class="hljs-comment">#$ -N zxf </span><br><span class="hljs-comment">#$ -j y </span><br><span class="hljs-comment">#$ -o ./ </span><br><span class="hljs-comment">#$ -e ./ </span><br><span class="hljs-comment">#$ -cwd  </span><br><span class="hljs-comment">#$ -q zone2.q  </span><br><span class="hljs-comment">#$ -pe mpi 8-8</span><br><span class="hljs-built_in">export</span> MKL_NUM_THREADS=1<br><span class="hljs-built_in">export</span> OMP_NUM_THREADS=1<br><br><span class="hljs-built_in">source</span> ~/.bashrc<br><span class="hljs-comment"># 需要下面这行命令激活sowfa环境变量</span><br><span class="hljs-built_in">source</span> ~/.sowfarc<br><span class="hljs-built_in">hash</span> -r<br><span class="hljs-built_in">export</span> path=<span class="hljs-variable">$TMPDIR</span>:<span class="hljs-variable">$path</span><br><br>initializer=setFieldsABL<br>solver=ABLSolver<br>runNumber=1<br>startTime=0<br><br><span class="hljs-built_in">cp</span> system/controlDict.<span class="hljs-variable">$runNumber</span> system/controlDict<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Starting OpenFOAM job at: &quot;</span> $(<span class="hljs-built_in">date</span>)<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;using &quot;</span> <span class="hljs-variable">$NSLOTS</span> <span class="hljs-string">&quot; cores&quot;</span><br><br><span class="hljs-comment"># Run the flow field initializer (parallel)</span><br><span class="hljs-keyword">if</span> [ <span class="hljs-variable">$runNumber</span> -eq 1 ] <br>   <span class="hljs-keyword">then</span><br>   mpirun -np <span class="hljs-variable">$NSLOTS</span> <span class="hljs-variable">$initializer</span> -parallel &gt; <span class="hljs-built_in">log</span>.<span class="hljs-variable">$runNumber</span>.<span class="hljs-variable">$initializer</span> 2&gt;&amp;1<br><span class="hljs-keyword">fi</span><br><span class="hljs-comment"># Run the solver (parallel)</span><br>mpirun -np <span class="hljs-variable">$NSLOTS</span> <span class="hljs-variable">$solver</span> -parallel &gt; <span class="hljs-built_in">log</span>.<span class="hljs-variable">$runNumber</span>.<span class="hljs-variable">$solver</span> 2&gt;&amp;1<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Ending OpenFOAM job at: &quot;</span> $(<span class="hljs-built_in">date</span>)<br></code></pre></td></tr></table></figure><h4 id="修改setUp文件"><a href="#修改setUp文件" class="headerlink" title="修改setUp文件"></a>修改setUp文件</h4><p>nx改为30，ny改为30，nz改为10</p><p>nCores改为你有的核数，比如8，decompOrder改为(2,2,2)，要保证乘起来要等与nCores</p><h4 id="修改system-controlDict-1文件"><a href="#修改system-controlDict-1文件" class="headerlink" title="修改system&#x2F;controlDict.1文件"></a>修改system&#x2F;controlDict.1文件</h4><p>将endTime改为1000，writeInterval改为100</p><h4 id="运行计算"><a href="#运行计算" class="headerlink" title="运行计算"></a>运行计算</h4><p>网格预处理（此处为了方便，直接用主节点进行预处理了，如果网格量多，就需要写任务脚本提交到计算节点处理）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./runscript.preprocess<br></code></pre></td></tr></table></figure><p>运行并行计算</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 提交任务</span><br>ssub runscript.solve.1<br><br><span class="hljs-comment"># 查看任务</span><br>qstat<br></code></pre></td></tr></table></figure><p>可以通过<code>log.1.setFieldsABL</code>和<code>log.1.ABLSolver</code>文件来查看结果</p><p>合并多核结果（此处为了方便，直接用主节点进行预处理了，如果网格量多，就需要写任务脚本提交到计算节点处理）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">reconstructPar<br></code></pre></td></tr></table></figure><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>如果运行过程提示缺什么.so或者.h文件，可以看看是什么库，如果是已经安装的但是他检测不到，可以通过在~&#x2F;.bashrc文件中LD_LIBRARY_PATH和INCLUDE环境变量来指定库的路径。</p>]]></content>
    
    
    <categories>
      
      <category>软件安装</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>OpenFOAM+OpenFAST+SOWFA</title>
    <link href="/installations/openfoam-openfast-sowfa/"/>
    <url>/installations/openfoam-openfast-sowfa/</url>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu18-04下SOWFA安装"><a href="#Ubuntu18-04下SOWFA安装" class="headerlink" title="Ubuntu18.04下SOWFA安装"></a>Ubuntu18.04下SOWFA安装</h1><h2 id="1-安装OpenFOAM（要和下面的SOWFA版本对应）"><a href="#1-安装OpenFOAM（要和下面的SOWFA版本对应）" class="headerlink" title="1. 安装OpenFOAM（要和下面的SOWFA版本对应）"></a>1. 安装OpenFOAM（要和下面的SOWFA版本对应）</h2><h3 id="安装OpenFOAM-6"><a href="#安装OpenFOAM-6" class="headerlink" title="安装OpenFOAM-6"></a>安装OpenFOAM-6</h3><ol><li>更新与安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get update<br>sudo apt-get upgrade<br>sudo apt-get install -y build-essential cmake git libopenmpi-dev openmpi-bin libblas-dev liblapack-dev flex bison gdb valgrind g++ libxml2-dev libhdf5-serial-dev gfortran<br><br></code></pre></td></tr></table></figure><ol start="2"><li>下载OpenFOAM源码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/OpenFOAM &amp;&amp; <span class="hljs-built_in">cd</span> ~/OpenFOAM<br>git <span class="hljs-built_in">clone</span> https://github.com/OpenFOAM/OpenFOAM-6.git<br>git <span class="hljs-built_in">clone</span> https://github.com/OpenFOAM/ThirdParty-6.git<br><span class="hljs-comment"># 将环境变量添加到.bashrc文件中</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;source <span class="hljs-variable">$HOME</span>/OpenFOAM/OpenFOAM-6/etc/bashrc&quot;</span> &gt;&gt; ~/.bashrc &amp;&amp; <span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><ol start="3"><li>编译安装（需要较长时间）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_THIRD_PARTY_DIR</span> &amp;&amp; ./Allwmake<br><br><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_PROJECT_DIR</span> &amp;&amp; ./Allwmake<br></code></pre></td></tr></table></figure><ol start="4"><li>创建run文件夹</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/OpenFOAM/<span class="hljs-variable">$USER</span>-6/run<br></code></pre></td></tr></table></figure><h4 id="安装OpenFOAM-2-4-0"><a href="#安装OpenFOAM-2-4-0" class="headerlink" title="安装OpenFOAM-2.4.0"></a>安装OpenFOAM-2.4.0</h4><p>参考<a href="https://openfoamwiki.net/index.php/Installation/Linux/OpenFOAM-2.4.0/Ubuntu#Ubuntu_18.04">这个页面</a></p><h2 id="2-安装OpenFAST-2-4-0"><a href="#2-安装OpenFAST-2-4-0" class="headerlink" title="2. 安装OpenFAST-2.4.0"></a>2. 安装OpenFAST-2.4.0</h2><ol><li>安装gfortran-10</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install -y software-properties-common<br>sudo add-apt-repository ppa:ubuntu-toolchain-r/test<br>sudo apt-get update<br>sudo apt-get install gfortran-10<br></code></pre></td></tr></table></figure><ol><li>安装高版本的cmake</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/Programs &amp;&amp; <span class="hljs-built_in">cd</span> ~/Programs<br>wget https://github.com/Kitware/CMake/releases/download/v3.26.3/cmake-3.26.3-linux-x86_64.sh<br><span class="hljs-built_in">chmod</span> +x cmake-3.26.3-linux-x86_64.sh<br>./cmake-3.26.3-linux-x86_64.sh<br>vim ~/.bashrc<br><span class="hljs-comment"># 添加以下内容并保存&lt;-</span><br><span class="hljs-built_in">export</span> PATH=~/Programs/cmake-3.26.3-linux-x86_64/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-comment"># -&gt;</span><br><br><span class="hljs-built_in">source</span> ~/.bashrc<br><span class="hljs-comment"># 安装完成查看版本是否为3.26.3</span><br>cmake --version<br><span class="hljs-built_in">rm</span> cmake-3.26.3-linux-x86_64.sh<br></code></pre></td></tr></table></figure><ol><li>安装yaml-cpp</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/Programs<br>git <span class="hljs-built_in">clone</span> https://github.com/jbeder/yaml-cpp.git &amp;&amp; <span class="hljs-built_in">cd</span> yaml-cpp<br><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>cmake -DBUILD_SHARED_LIBS=ON ..<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><ol><li>下载openfast源码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/Programs<br>wget https://github.com/OpenFAST/openfast/archive/refs/tags/v2.4.0.tar.gz<br>tar -zxvf v2.4.0.tar.gz &amp;&amp; <span class="hljs-built_in">cd</span> openfast-2.4.0<br></code></pre></td></tr></table></figure><ol><li>编译安装</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>cmake .. -DBUILD_OPENFAST_CPP_API=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DFPE_TRAP_ENABLED=ON<br><br>make <span class="hljs-built_in">help</span><br>make -j$(<span class="hljs-built_in">nproc</span>)<br>sudo make install<br></code></pre></td></tr></table></figure><h2 id="3-安装SOWFA"><a href="#3-安装SOWFA" class="headerlink" title="3. 安装SOWFA"></a>3. 安装SOWFA</h2><h3 id="SOWFA-6"><a href="#SOWFA-6" class="headerlink" title="SOWFA-6"></a>SOWFA-6</h3><ol><li>下载源码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/OpenFOAM/<br>git <span class="hljs-built_in">clone</span> -b dev https://github.com/pablo-benito/SOWFA-6.git &amp;&amp; <span class="hljs-built_in">cd</span> SOWFA-6<br><span class="hljs-comment"># 官方最新的dev分支可能会有错，clone这个别人fork的仓库比较保险</span><br></code></pre></td></tr></table></figure><ol><li>在用户home目录创建.sowfa_bashrc文件，内容如下：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>SOWFA-<span class="hljs-function"><span class="hljs-title">6</span></span>()<br>&#123;<br>   <span class="hljs-comment"># Important locations.</span><br>   <span class="hljs-built_in">export</span> inst_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br>   <span class="hljs-built_in">export</span> sowfa_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br><br>   <span class="hljs-comment"># Unset OpenFOAM environment variables.</span><br>   <span class="hljs-built_in">export</span> OPENFOAM_VERSION=6<br>   <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$FOAM_INST_DIR</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Nothing to unset...&quot;</span><br>   <span class="hljs-keyword">else</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;     *Unsetting OpenFOAM environment variables...&quot;</span><br>      <span class="hljs-keyword">if</span> [ -f <span class="hljs-string">&quot;<span class="hljs-variable">$FOAM_INST_DIR</span>/OpenFOAM-<span class="hljs-variable">$OPENFOAM_VERSION</span>/etc/config.sh/unset&quot;</span> ]; <span class="hljs-keyword">then</span><br>         . <span class="hljs-variable">$FOAM_INST_DIR</span>/OpenFOAM-<span class="hljs-variable">$OPENFOAM_VERSION</span>/etc/config.sh/unset<br>      <span class="hljs-keyword">else</span><br>         . <span class="hljs-variable">$FOAM_INST_DIR</span>/OpenFOAM-<span class="hljs-variable">$OPENFOAM_VERSION</span>/etc/config/unset.sh<br>      <span class="hljs-keyword">fi</span><br>   <span class="hljs-keyword">fi</span><br><br>   <span class="hljs-comment"># Set the OpenFOAM version and installation directory</span><br>   <span class="hljs-built_in">export</span> OPENFOAM_VERSION=6<br>   <span class="hljs-built_in">export</span> OPENFOAM_NAME=OpenFOAM-<span class="hljs-variable">$OPENFOAM_VERSION</span><br>   <span class="hljs-built_in">export</span> FOAM_INST_DIR=<span class="hljs-variable">$inst_loc</span><br>   <span class="hljs-built_in">export</span> WM_PROJECT_USER_DIR=/home/<span class="hljs-variable">$USER</span>/OpenFOAM/SOWFA-<span class="hljs-variable">$OPENFOAM_VERSION</span><br>   <span class="hljs-built_in">export</span> FOAMY_HEX_MESH=<span class="hljs-literal">true</span><br><br>   <span class="hljs-comment"># Source the OpenFOAM main environment.</span><br>   foamDotFile=<span class="hljs-variable">$FOAM_INST_DIR</span>/<span class="hljs-variable">$OPENFOAM_NAME</span>/etc/bashrc<br>   <span class="hljs-keyword">if</span> [ -f <span class="hljs-variable">$foamDotFile</span> ] ; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Sourcing <span class="hljs-variable">$foamDotFile</span>...&quot;</span><br>      <span class="hljs-built_in">source</span> <span class="hljs-variable">$foamDotFile</span><br>   <span class="hljs-keyword">fi</span><br><br>   <span class="hljs-comment"># For wmake compiling.</span><br>   <span class="hljs-built_in">export</span> WM_NCOMPPROCS=12<br>   <span class="hljs-built_in">export</span> WM_COLOURS=<span class="hljs-string">&quot;white blue green cyan red magenta yellow&quot;</span><br><br>   <span class="hljs-comment"># Alias to tutorials.</span><br>   <span class="hljs-built_in">alias</span> tut=<span class="hljs-string">&#x27;cd /home/$USER/OpenFOAM/SOWFA-$OPENFOAM_VERSION/exampleCases&#x27;</span><br><br>   <span class="hljs-comment"># Set the SOWFA installation directory.</span><br>   <span class="hljs-built_in">export</span> SOWFA_DIR=<span class="hljs-variable">$sowfa_loc</span>/SOWFA-<span class="hljs-variable">$OPENFOAM_VERSION</span><br>   <span class="hljs-built_in">export</span> SOWFA_APPBIN=<span class="hljs-variable">$SOWFA_DIR</span>/applications/bin/<span class="hljs-variable">$WM_OPTIONS</span><br>   <span class="hljs-built_in">export</span> SOWFA_LIBBIN=<span class="hljs-variable">$SOWFA_DIR</span>/lib/<span class="hljs-variable">$WM_OPTIONS</span><br>   <span class="hljs-built_in">export</span> HDF5_DIR=/usr/lib/x86_64-linux-gnu/hdf5/serial<br>   <span class="hljs-built_in">export</span> OPENFAST_DIR=<span class="hljs-variable">$HOME</span>/Programs/openfast-2.4.0/install<br>   <span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$SOWFA_LIBBIN</span>:<span class="hljs-variable">$OPENFAST_DIR</span>/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br>   <span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$SOWFA_APPBIN</span>:<span class="hljs-variable">$OPENFAST_DIR</span>/bin:<span class="hljs-variable">$PATH</span><br>&#125;<br></code></pre></td></tr></table></figure><ol><li>写入.bashrc中</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;alias SOWFA=&#x27;source ~/.sowfa_bashrc; SOWFA-6&#x27;&quot;</span> &gt;&gt; ~/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br></code></pre></td></tr></table></figure><ol><li>执行SOWFA脚本来配置安装需要的环境变量</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">SOWFA<br>./Allwmake<br></code></pre></td></tr></table></figure><h3 id="SOWFA-2-4-0-老版本，能装SOWFA-6就不用看这部分"><a href="#SOWFA-2-4-0-老版本，能装SOWFA-6就不用看这部分" class="headerlink" title="SOWFA-2.4.0 (老版本，能装SOWFA-6就不用看这部分)"></a>SOWFA-2.4.0 (老版本，能装SOWFA-6就不用看这部分)</h3><ol><li><p>下载源码</p></li><li><p>在用户home目录创建.sowfa_bashrc文件，内容如下：</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Get the aliases and functions</span><br><span class="hljs-keyword">if</span> [ -f ~/.bashrc ]; <span class="hljs-keyword">then</span><br>        . ~/.bashrc<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># SOWFA-2.4.0</span><br>SOWFA-2.4.<span class="hljs-function"><span class="hljs-title">0</span></span>()<br>&#123;<br>  <span class="hljs-built_in">export</span> inst_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br>  <span class="hljs-built_in">export</span> sowfa_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br><br>   <span class="hljs-comment"># Unset OpenFOAM environment variables.</span><br>   <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$FOAM_INST_DIR</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Nothing to unset...&quot;</span><br>   <span class="hljs-keyword">else</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;     *Unsetting OpenFOAM environment variables...&quot;</span><br>      . <span class="hljs-variable">$FOAM_INST_DIR</span>/OpenFOAM-2.4.0/etc/config/unset.sh<br>   <span class="hljs-keyword">fi</span><br><br>   <span class="hljs-comment"># Set the OpenFOAM version and installation directory</span><br>   <span class="hljs-built_in">export</span> OPENFOAM_VERSION=2.4.0<br>   <span class="hljs-built_in">export</span> OPENFOAM_NAME=OpenFOAM-<span class="hljs-variable">$OPENFOAM_VERSION</span><br>   <span class="hljs-built_in">export</span> FOAM_INST_DIR=<span class="hljs-variable">$inst_loc</span><br>   <span class="hljs-built_in">export</span> WM_PROJECT_USER_DIR=<span class="hljs-variable">$HOME</span>/OpenFOAM/SOWFA-<span class="hljs-variable">$OPENFOAM_VERSION</span><br><br>   foamDotFile=<span class="hljs-variable">$FOAM_INST_DIR</span>/<span class="hljs-variable">$OPENFOAM_NAME</span>/etc/bashrc<br>   <span class="hljs-keyword">if</span> [ -f <span class="hljs-variable">$foamDotFile</span> ] ; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Sourcing <span class="hljs-variable">$foamDotFile</span>...&quot;</span><br>      <span class="hljs-built_in">source</span> <span class="hljs-variable">$foamDotFile</span><br>   <span class="hljs-keyword">fi</span><br><br>   <span class="hljs-built_in">export</span> WM_NCOMPPROCS=12<br>   <span class="hljs-built_in">export</span> WM_COLOURS=<span class="hljs-string">&quot;white blue green cyan red magenta yellow&quot;</span><br><br>   <span class="hljs-built_in">alias</span> tut=<span class="hljs-string">&#x27;cd /$HOME/OpenFOAM/$USER-$OPENFOAM_VERSION/SOWFA-$OPENFOAM_VERSION/exampleCases&#x27;</span><br><br>   <span class="hljs-comment">#export SOWFA_DIR=$FOAM_INST_DIR/$USER-$OPENFOAM_VERSION/SOWFA-$OPENFOAM_VERSION</span><br>   <span class="hljs-built_in">export</span> SOWFA_DIR=<span class="hljs-variable">$sowfa_loc</span>/SOWFA-<span class="hljs-variable">$OPENFOAM_VERSION</span><br>   <span class="hljs-built_in">export</span> SOWFA_APPBIN=<span class="hljs-variable">$SOWFA_DIR</span>/applications/bin/<span class="hljs-variable">$WM_OPTIONS</span><br>   <span class="hljs-built_in">export</span> SOWFA_LIBBIN=<span class="hljs-variable">$SOWFA_DIR</span>/lib/<span class="hljs-variable">$WM_OPTIONS</span><br>   <span class="hljs-built_in">export</span> OPENFAST_DIR=<span class="hljs-variable">$HOME</span>/Programs/openfast-2.4.0/install<br>   <span class="hljs-built_in">export</span> HDF5_DIR=/usr/lib/x86_64-linux-gnu/hdf5/serial<br>   <span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$SOWFA_LIBBIN</span>:<span class="hljs-variable">$OPENFAST_DIR</span>/lib:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br>   <span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$SOWFA_APPBIN</span>:<span class="hljs-variable">$OPENFAST_DIR</span>/bin:<span class="hljs-variable">$PATH</span><br>&#125;<br></code></pre></td></tr></table></figure><ol start="3"><li><p>写入.bashrc中</p></li><li><p>修改源码中的错误</p><p> 参考<a href="https://github.com/pablo-benito/SOWFA-installation#sowfa-compilation">原文</a></p></li><li><p>执行SOWFA脚本来配置安装需要的环境变量</p></li></ol><h1 id="CentOS-7下SOWFA的安装"><a href="#CentOS-7下SOWFA的安装" class="headerlink" title="CentOS-7下SOWFA的安装"></a>CentOS-7下SOWFA的安装</h1><h2 id="一-OpenFOAM2-4-x安装-参考此网站"><a href="#一-OpenFOAM2-4-x安装-参考此网站" class="headerlink" title="一. OpenFOAM2.4.x安装(参考此网站)"></a>一. OpenFOAM2.4.x安装(参考<a href="https://openfoamwiki.net/index.php/Installation/Linux/OpenFOAM-2.4.x/CentOS_SL_RHEL#CentOS_7.1">此网站</a>)</h2><h3 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1. 安装依赖包"></a>1. 安装依赖包</h3><p>如果有sudo权限，直接sudo安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切换到浙大镜像源</span><br>sed -e <span class="hljs-string">&#x27;s|^mirrorlist=|#mirrorlist=|g&#x27;</span> \<br>e <span class="hljs-string">&#x27;s|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.zju.edu.cn|g&#x27;</span> \<br>-i.bak \<br>/etc/yum.repos.d/CentOS-*.repo<br><br>sudo yum makecache<br>sudo yum update<br>sudo yum upgrade<br><br><span class="hljs-comment"># 安装依赖</span><br>sudo -s<br>yum groupinstall <span class="hljs-string">&#x27;Development Tools&#x27;</span> <br>yum install openmpi openmpi-devel zlib-devel gstreamer-plugins-base-devel libXext-devel libGLU-devel libXt-devel libXrender-devel libXinerama-devel libpng-devel libXrandr-devel libXi-devel libXft-devel libjpeg-turbo-devel libXcursor-devel readline-devel ncurses-devel python python-devel cmake qt-devel qt-assistant mpfr-devel gmp-devel  build-essential git ca-certificates flex libfl-dev bison zlib1g-dev libboost-system-dev libboost-thread-dev libopenmpi-dev openmpi-bin gnuplot libreadline-dev libncurses-dev libxt-dev<br><br>yum upgrade<br><span class="hljs-comment"># 退出sudo模式</span><br><span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h3 id="2-下载OpenFOAM2-4-x和ThirdParty-2-4-x"><a href="#2-下载OpenFOAM2-4-x和ThirdParty-2-4-x" class="headerlink" title="2. 下载OpenFOAM2.4.x和ThirdParty-2.4.x"></a>2. 下载OpenFOAM2.4.x和ThirdParty-2.4.x</h3><p>打开一个新的终端窗口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~<br><span class="hljs-built_in">mkdir</span> OpenFOAM<br><span class="hljs-built_in">cd</span> OpenFOAM<br><span class="hljs-comment"># 如果是在没有网的服务器上下载，需要先下载到有网的linux系统上（不下到windows是因为windows的换行标记和linux不一样，会报错），然后再拷贝过来（拷贝文件夹或者tar压缩后再拷贝）</span><br>git <span class="hljs-built_in">clone</span> https://github.com/OpenFOAM/OpenFOAM-2.4.x.git<br>git <span class="hljs-built_in">clone</span> https://github.com/OpenFOAM/ThirdParty-2.4.x.git<br><span class="hljs-built_in">cd</span> ThirdParty-2.4.x<br><span class="hljs-built_in">mkdir</span> download<br><span class="hljs-comment"># 将/files/OpenFOAM/目录下的三个压缩包通过sftp工具拷贝到这里的download文件夹</span><br>tar -xzf download/scotch_6.0.3.tar.gz<br>tar -xzf download/cgal-releases-CGAL-4.6.tar.gz &amp;&amp; <span class="hljs-built_in">mv</span> cgal-releases-CGAL-4.6 CGAL-4.6<br>tar -xjf download/boost_1_55_0.tar.bz2<br></code></pre></td></tr></table></figure><h3 id="3-编译安装第三方库"><a href="#3-编译安装第三方库" class="headerlink" title="3. 编译安装第三方库"></a>3. 编译安装第三方库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 修改源码</span><br><span class="hljs-built_in">cd</span> ~/OpenFOAM<br>sed -i -e <span class="hljs-string">&#x27;s=boost-system=boost_1_55_0=&#x27;</span> OpenFOAM-2.4.x/etc/config/CGAL.sh<br><span class="hljs-comment"># 设置环境变量（以下两句二选一！）</span><br><span class="hljs-comment">## 如果是自己的虚拟机，一般通过yum安装的openmpi在/usr/lib64/openmpi/bin/目录下</span><br>module load mpi/openmpi-x86_64 || <span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/lib64/openmpi/bin<br><span class="hljs-comment">## 如果是大集群，openmpi在/usr/local/openmpi3.1.2_ucx/bin/目录下</span><br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/local/openmpi3.1.2_ucx/bin/<br><br><span class="hljs-comment"># 这里的WM_NCOMPPROCS设置为你编译要用的核数（大集群使用手册说不要在主节点上并行，故设为单核） </span><br><span class="hljs-built_in">source</span> <span class="hljs-variable">$HOME</span>/OpenFOAM/OpenFOAM-2.4.x/etc/bashrc WM_NCOMPPROCS=1 WM_MPLIB=SYSTEMOPENMPI<br><span class="hljs-comment"># 设置of24x别名来加载环境变量</span><br><span class="hljs-comment">## 如果是自己的虚拟机</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;alias of24x=&#x27;module load mpi/openmpi-x86_64; source \$HOME/OpenFOAM/OpenFOAM-2.4.x/etc/bashrc <span class="hljs-variable">$FOAM_SETTINGS</span>&#x27;&quot;</span> &gt;&gt; <span class="hljs-variable">$HOME</span>/.bashrc<br><span class="hljs-comment">## 如果是大集群</span><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;alias of24x=&#x27;export PATH=\$PATH:/usr/local/openmpi3.1.2_ucx/bin/; source \$HOME/OpenFOAM/OpenFOAM-2.4.x/etc/bashrc <span class="hljs-variable">$FOAM_SETTINGS</span>&#x27;&quot;</span> &gt;&gt; <span class="hljs-variable">$HOME</span>/.bashrc<br><br><span class="hljs-built_in">source</span> ~/.bashrc<br>of24x<br><span class="hljs-comment"># 编译安装gmp</span><br><span class="hljs-comment"># 将本文档根目录的gmp.tar上传到服务器~/Packages/目录下</span><br><span class="hljs-built_in">cd</span> ~/Packages<br>tar -xvf gmp-5.1.2.tar<br><span class="hljs-built_in">cd</span> gmp-5.1.2<br>./configure --prefix=<span class="hljs-variable">$HOME</span>/Packages/gmp-5.1.2/install --enable-cxx <br>make<br>make check<br>make install<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;export LD_LIBRARY_PATH=<span class="hljs-variable">$HOME</span>/Packages/gmp-5.1.2/install/lib:\$LD_LIBRARY_PATH&quot;</span> &gt;&gt; <span class="hljs-variable">$HOME</span>/.bashrc<br><span class="hljs-built_in">source</span> ~/.bashrc<br><br><span class="hljs-comment"># 编译安装CGAL</span><br><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_THIRD_PARTY_DIR</span><br>sed -i -e <span class="hljs-string">&#x27;s=boost-system=boost_1_55_0=&#x27;</span> makeCGAL<br>./makeCGAL &gt; log.mkcgal 2&gt;&amp;1<br><span class="hljs-comment"># 检查log.mkcgal文件是否有错误</span><br></code></pre></td></tr></table></figure><h3 id="4-编译安装OpenFOAM"><a href="#4-编译安装OpenFOAM" class="headerlink" title="4. 编译安装OpenFOAM"></a>4. 编译安装OpenFOAM</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 加载环境变量</span><br>wmSET <span class="hljs-variable">$FOAM_SETTINGS</span><br><span class="hljs-comment"># 编译安装</span><br><span class="hljs-built_in">cd</span> <span class="hljs-variable">$WM_PROJECT_DIR</span><br>./Allwmake &gt; log.make 2&gt;&amp;1<br><span class="hljs-comment"># 再次运行，查看log.make内各个库是否编译成功</span><br>./Allwmake &gt; log.make 2&gt;&amp;1<br><span class="hljs-comment"># paraview出错也没关系</span><br></code></pre></td></tr></table></figure><h3 id="5-（可选）修改paraFoam脚本"><a href="#5-（可选）修改paraFoam脚本" class="headerlink" title="5. （可选）修改paraFoam脚本"></a>5. （可选）修改paraFoam脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">which</span> paraFoam<br></code></pre></td></tr></table></figure><p>修改paraFoam脚本为以下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">pre_para=`<span class="hljs-built_in">basename</span> <span class="hljs-variable">$PWD</span>`<br>para_file=<span class="hljs-variable">$&#123;pre_para&#125;</span>.foam<br>&gt;<span class="hljs-variable">$&#123;para_file&#125;</span><br>powershell.exe /c <span class="hljs-string">&quot;paraview <span class="hljs-variable">$&#123;para_file&#125;</span>&quot;</span><br><span class="hljs-built_in">rm</span> <span class="hljs-variable">$&#123;para_file&#125;</span><br></code></pre></td></tr></table></figure><!-- ## 二. OpenFAST-2.4.0安装### 1. 安装依赖包<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install build-essential flex bison gfortran git cmake python python-dev  \<br>zlib1g-dev libreadline-dev libncurses-dev libyaml-cpp-dev libgmp-dev libmpfr-dev \<br>libboost-system-dev libboost-thread-dev libopenmpi-dev openmpi-bin \<br>libhdf5-dev libxml2-dev libcgal-dev libptscotch-dev libscotch-dev libopenblas-dev<br></code></pre></td></tr></table></figure><h3 id="2-安装cmake"><a href="#2-安装cmake" class="headerlink" title="2. 安装cmake"></a>2. 安装cmake</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/package &amp;&amp; <span class="hljs-built_in">cd</span> ~/package<br>wget https://github.com/Kitware/CMake/releases/download/v3.26.3/cmake-3.26.3-linux-x86_64.sh<br><span class="hljs-built_in">chmod</span> +x cmake-3.26.3-linux-x86_64.sh<br>./cmake-3.26.3-linux-x86_64.sh<br>vim ~/.bashrc<br><span class="hljs-comment"># 添加以下内容并保存&lt;-</span><br><span class="hljs-built_in">export</span> PATH=~/package/cmake-3.26.3-linux-x86_64/bin:<span class="hljs-variable">$PATH</span><br><span class="hljs-comment"># -&gt;</span><br><span class="hljs-built_in">source</span> ~/.bashrc<br>cmake --version<br><span class="hljs-built_in">rm</span> cmake-3.26.3-linux-x86_64.sh<br></code></pre></td></tr></table></figure><h3 id="3-安装yaml-cpp"><a href="#3-安装yaml-cpp" class="headerlink" title="3. 安装yaml-cpp"></a>3. 安装yaml-cpp</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/package<br>git <span class="hljs-built_in">clone</span> https://github.com/jbeder/yaml-cpp.git &amp;&amp; <span class="hljs-built_in">cd</span> yaml-cpp<br><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>cmake -DBUILD_SHARED_LIBS=ON ..<br>make<br>sudo make install<br><span class="hljs-built_in">export</span> HDF5_ROOT=<span class="hljs-string">&quot;/usr/lib/x86_64-linux-gnu/hdf5/serial&quot;</span><br><span class="hljs-built_in">export</span> YAML_ROOT=<span class="hljs-string">&quot;/usr/&quot;</span><br></code></pre></td></tr></table></figure><h3 id="3-安装OpenFAST"><a href="#3-安装OpenFAST" class="headerlink" title="3. 安装OpenFAST"></a>3. 安装OpenFAST</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/Program &amp;&amp; <span class="hljs-built_in">cd</span> ~/Program<br>wget https://github.com/OpenFAST/openfast/archive/refs/tags/v2.4.0.tar.gz<br>tar -zxvf v2.4.0.tar.gz &amp;&amp; <span class="hljs-built_in">cd</span> openfast-2.4.0<br><br><span class="hljs-built_in">mkdir</span> build &amp;&amp; <span class="hljs-built_in">cd</span> build<br>cmake .. -DBUILD_OPENFAST_CPP_API=ON -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DFPE_TRAP_ENABLED=ON<br><br>make <span class="hljs-built_in">help</span><br>make -j$(<span class="hljs-built_in">nproc</span>)<br>sudo make install<br>``` --&gt;<br><br><span class="hljs-comment">## 三. SOWFA安装</span><br><span class="hljs-comment">### 1. 下载源码</span><br>```bash<br><span class="hljs-built_in">cd</span> ~/OpenFOAM<br>git <span class="hljs-built_in">clone</span> https://github.com/NREL/SOWFA.git<br></code></pre></td></tr></table></figure><h3 id="2-配置编译和运行环境"><a href="#2-配置编译和运行环境" class="headerlink" title="2. 配置编译和运行环境"></a>2. 配置编译和运行环境</h3><p>在用户home目录创建.sowfarc文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Get the aliases and functions</span><br><span class="hljs-keyword">if</span> [ -f ~/.bashrc ]; <span class="hljs-keyword">then</span><br>        . ~/.bashrc<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-comment"># SOWFA-2.4.x</span><br>SOWFA-2.4.<span class="hljs-function"><span class="hljs-title">x</span></span>()<br>&#123;<br>  <span class="hljs-built_in">export</span> inst_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br>  <span class="hljs-built_in">export</span> sowfa_loc=<span class="hljs-variable">$HOME</span>/OpenFOAM<br><br>   <span class="hljs-comment"># Unset OpenFOAM environment variables.</span><br>   <span class="hljs-keyword">if</span> [ -z <span class="hljs-string">&quot;<span class="hljs-variable">$FOAM_INST_DIR</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Nothing to unset...&quot;</span><br>   <span class="hljs-keyword">else</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;     *Unsetting OpenFOAM environment variables...&quot;</span><br>      . <span class="hljs-variable">$FOAM_INST_DIR</span>/OpenFOAM-2.4.x/etc/config/unset.sh<br>   <span class="hljs-keyword">fi</span><br><br>   <span class="hljs-comment"># Set the OpenFOAM version and installation directory</span><br>   <span class="hljs-built_in">export</span> OPENFOAM_VERSION=2.4.x<br>   <span class="hljs-built_in">export</span> OPENFOAM_NAME=OpenFOAM-<span class="hljs-variable">$OPENFOAM_VERSION</span><br>   <span class="hljs-built_in">export</span> FOAM_INST_DIR=<span class="hljs-variable">$inst_loc</span><br>   <span class="hljs-built_in">export</span> WM_PROJECT_USER_DIR=<span class="hljs-variable">$HOME</span>/OpenFOAM/SOWFA<br><br>   foamDotFile=<span class="hljs-variable">$FOAM_INST_DIR</span>/<span class="hljs-variable">$OPENFOAM_NAME</span>/etc/bashrc<br>   <span class="hljs-keyword">if</span> [ -f <span class="hljs-variable">$foamDotFile</span> ] ; <span class="hljs-keyword">then</span><br>      <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Sourcing <span class="hljs-variable">$foamDotFile</span>...&quot;</span><br>      <span class="hljs-built_in">source</span> <span class="hljs-variable">$foamDotFile</span><br>   <span class="hljs-keyword">fi</span><br><br>   <span class="hljs-built_in">export</span> WM_NCOMPPROCS=12<br>   <span class="hljs-built_in">export</span> WM_COLOURS=<span class="hljs-string">&quot;white blue green cyan red magenta yellow&quot;</span><br><br>   <span class="hljs-built_in">alias</span> tut=<span class="hljs-string">&#x27;cd /$HOME/OpenFOAM/SOWFA/exampleCases&#x27;</span><br><br>   <span class="hljs-built_in">export</span> SOWFA_DIR=<span class="hljs-variable">$sowfa_loc</span>/SOWFA<br>   <span class="hljs-built_in">export</span> SOWFA_APPBIN=<span class="hljs-variable">$SOWFA_DIR</span>/applications/bin/<span class="hljs-variable">$WM_OPTIONS</span><br>   <span class="hljs-built_in">export</span> SOWFA_LIBBIN=<span class="hljs-variable">$SOWFA_DIR</span>/lib/<span class="hljs-variable">$WM_OPTIONS</span><br><br>   <span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$SOWFA_LIBBIN</span>:<span class="hljs-variable">$LD_LIBRARY_PATH</span><br>   <span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$SOWFA_APPBIN</span>:<span class="hljs-variable">$PATH</span><br>&#125;<br></code></pre></td></tr></table></figure><p>然后在.bashrc文件中添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">alias</span> SOWFA=<span class="hljs-string">&#x27;of24x &amp;&amp; source ~/.sowfarc &amp;&amp; SOWFA-2.4.x&#x27;</span><br></code></pre></td></tr></table></figure><p>最后运行以下命令使配置生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/.bashrc<br>SOWFA<br></code></pre></td></tr></table></figure><h3 id="3-编译安装"><a href="#3-编译安装" class="headerlink" title="3. 编译安装"></a>3. 编译安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> <span class="hljs-variable">$SOWFA_DIR</span><br>./Allwmake<br><span class="hljs-comment"># 再编译一遍检查有没有错误</span><br>./Allwmake &gt; log.make 2&gt;&amp;1<br></code></pre></td></tr></table></figure><h3 id="4-检查案例是否能运行"><a href="#4-检查案例是否能运行" class="headerlink" title="4. 检查案例是否能运行"></a>4. 检查案例是否能运行</h3><h4 id="1）复制大气边界层案例到运行目录下"><a href="#1）复制大气边界层案例到运行目录下" class="headerlink" title="1）复制大气边界层案例到运行目录下"></a>1）复制大气边界层案例到运行目录下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r <span class="hljs-variable">$SOWFA_DIR</span>/exampleCases/example.ABL.flatTerrain.neutral <span class="hljs-variable">$FOAM_RUN</span>/<br>run<br><span class="hljs-built_in">cd</span> example.ABL.flatTerrain.neutral<br></code></pre></td></tr></table></figure><h4 id="2）修改runscript-preprocess文件"><a href="#2）修改runscript-preprocess文件" class="headerlink" title="2）修改runscript.preprocess文件"></a>2）修改runscript.preprocess文件</h4><p>注释掉第13行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># OpenFOAMversion=2.4.x-central</span><br></code></pre></td></tr></table></figure><p>注释掉第71-80行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># if [ $parallel -eq 1 ]</span><br><span class="hljs-comment">#    then</span><br><span class="hljs-comment">#    cd $PBS_O_WORKDIR</span><br><span class="hljs-comment"># fi</span><br><br><br><span class="hljs-comment"># # Source the bash profile and then call the appropriate OpenFOAM version function</span><br><span class="hljs-comment"># # so that all the modules and environment variables get set.</span><br><span class="hljs-comment"># source $HOME/.bash_profile</span><br><span class="hljs-comment"># OpenFOAM-$OpenFOAMversion</span><br></code></pre></td></tr></table></figure><h4 id="3）修改runscript-solve-1文件"><a href="#3）修改runscript-solve-1文件" class="headerlink" title="3）修改runscript.solve.1文件"></a>3）修改runscript.solve.1文件</h4><p>注释掉第8-12行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># source $HOME/.bash_profile</span><br><span class="hljs-comment"># OpenFOAM-2.4.x-central</span><br><span class="hljs-comment"># module list</span><br><br><span class="hljs-comment"># cd $PBS_O_WORKDIR</span><br></code></pre></td></tr></table></figure><p>第14行<code>core</code>改为小于等于电脑核数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cores=8<br></code></pre></td></tr></table></figure><h4 id="4）修改setUp文件"><a href="#4）修改setUp文件" class="headerlink" title="4）修改setUp文件"></a>4）修改setUp文件</h4><p>nx改为30，ny改为30，nz改为10</p><p>nCores改为你有的核数，比如8，decompOrder改为(2,2,2)，要保证乘起来要等与nCores</p><h4 id="5）修改system-controlDict-1文件"><a href="#5）修改system-controlDict-1文件" class="headerlink" title="5）修改system&#x2F;controlDict.1文件"></a>5）修改system&#x2F;controlDict.1文件</h4><p>将endTime改为1000，writeInterval改为100</p><h4 id="6）预处理网格"><a href="#6）预处理网格" class="headerlink" title="6）预处理网格"></a>6）预处理网格</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./runscript.preprocess<br></code></pre></td></tr></table></figure><h4 id="7）运行"><a href="#7）运行" class="headerlink" title="7）运行"></a>7）运行</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./runscript.solve.1<br></code></pre></td></tr></table></figure><h4 id="8）查看结果"><a href="#8）查看结果" class="headerlink" title="8）查看结果"></a>8）查看结果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">reconstructPar<br>paraFoam &amp;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>软件安装</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Anaconda3配置</title>
    <link href="/enviroments/anaconda3/"/>
    <url>/enviroments/anaconda3/</url>
    
    <content type="html"><![CDATA[<h1 id="1-下载安装包"><a href="#1-下载安装包" class="headerlink" title="1. 下载安装包"></a>1. 下载安装包</h1><p>由于服务器连接的是内网，可以在浙大镜像源下载Anaconda，下载地址：<a href="https://mirrors.zju.edu.cn/docs/anaconda/">https://mirrors.zju.edu.cn/docs/anaconda/</a>，在<strong>安装映像</strong>里选取对应的架构版本（架构查看方法：<code>uname -a</code>，192小服务器和13大集群是x86_64，所以选择<code>Linux_x86_64.sh</code>后缀的版本），右键复制下载链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/Programs &amp;&amp; <span class="hljs-built_in">cd</span> ~/Programs<br><span class="hljs-comment"># 下面这个链接替换为复制的最新版的anaconda的链接</span><br>wget https://mirrors.zju.edu.cn/anaconda/archive/Anaconda3-2023.03-Linux-x86_64.sh<br></code></pre></td></tr></table></figure><h1 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 下面这个文件名要替换为下载的文件名</span><br><span class="hljs-built_in">chmod</span> +x Anaconda3-2023.03-Linux-x86_64.sh<br>./Anaconda3-2023.03-Linux-x86_64.sh<br><span class="hljs-comment"># 安装过程中要选择安装位置，可以选在你的用户目录下的Program文件夹下</span><br><span class="hljs-comment"># 安装完成后，问你要不要init，选yes</span><br></code></pre></td></tr></table></figure><h1 id="3-换源"><a href="#3-换源" class="headerlink" title="3. 换源"></a>3. 换源</h1><p>如果用户目录下没有.condarc文件的话，先要用这句命令创建.condarc文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda config --<span class="hljs-built_in">set</span> show_channel_urls <span class="hljs-built_in">yes</span><br></code></pre></td></tr></table></figure><p>修改~&#x2F;.condarc文件为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs awk">channels:<br>  - defaults<br>show_channel_urls: true<br>default_channels:<br>  - https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/main<br>  - https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/r<br>  - https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>pkgs/msys2<br>custom_channels:<br>  conda-forge: https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  msys2: https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  bioconda: https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  menpo: https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch: https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  pytorch-lts: https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br>  simpleitk: https:<span class="hljs-regexp">//mi</span>rrors.zju.edu.cn<span class="hljs-regexp">/anaconda/</span>cloud<br></code></pre></td></tr></table></figure><p>清除缓存并更新（可能耗时较久）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda clean -i<br>conda update --all<br></code></pre></td></tr></table></figure><p>修改pip源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip config <span class="hljs-built_in">set</span> global.index-url https://mirrors.zju.edu.cn/pypi/web/simple<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Express后端框架配置</title>
    <link href="/enviroments/express/"/>
    <url>/enviroments/express/</url>
    
    <content type="html"><![CDATA[<h1 id="1-Express框架安装"><a href="#1-Express框架安装" class="headerlink" title="1. Express框架安装"></a>1. Express框架安装</h1><ol><li>服务器安装node.js和npm（不要直接用apt-get或yum，安装，要去官网下载安装）</li><li>创建后端项目文件夹，<code>npm init</code>初始化项目，一路回车</li><li>按照Express教程引入Express包开始开发,详细参考<a href="https://www.bilibili.com/video/BV1mQ4y1C7Cn">B站教程</a></li><li>可以通过<a href="./web-server.md/#5-Nginx%E6%89%98%E7%AE%A1api%E6%8E%A5%E5%8F%A3">Nginx的代理功能</a>把<code>http://your.server.ip.address:xxxx/</code>的请求代理到<code>http://your.server.ip.address/api/</code>下，就避免了端口暴露的隐患</li><li>开发api接口的时候可以用一些接口测试管理的工具，如Apifox、postman，用来做接口管理很方便</li></ol><h1 id="2-WebSocket的实现"><a href="#2-WebSocket的实现" class="headerlink" title="2. WebSocket的实现"></a>2. WebSocket的实现</h1><ol><li>在node.js下引入nodejs-websocket包</li><li>网上很多简单的起步教程</li><li>前端页面通过<code>ws://your.server.ip.address:xxxx/</code>就能和服务器通信，也可以像Express一样通过nginx代理，但是ws协议需要通过nginx升级，具体见<a href="./web-server.md/#6-Nginx%E6%89%98%E7%AE%A1websocket%E6%8E%A5%E5%8F%A3">Nginx的代理功能</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>网站服务搭建</title>
    <link href="/enviroments/web-server/"/>
    <url>/enviroments/web-server/</url>
    
    <content type="html"><![CDATA[<h1 id="1-安装LNMP（Linux-Nginx-MySQL-PHP）"><a href="#1-安装LNMP（Linux-Nginx-MySQL-PHP）" class="headerlink" title="1. 安装LNMP（Linux+Nginx+MySQL+PHP）"></a>1. 安装LNMP（Linux+Nginx+MySQL+PHP）</h1><ol><li>lnmp官网装lnmp环境</li><li>查找nginx.conf路径：<code>find / -name nginx.conf</code></li><li>更改查找到的nginx配置文件：<code>vim /usr/local/nginx/conf/nginx.conf</code></li><li>把server大括号内里的默认网页根目录改成想要的根目录</li><li>把网页拷进新的目录，访问域名，如果不成功，要加权限：<code>chmod -R 777 目录（如果涉及到上传文件的功能，必须赋予所有用户写入权限）</code></li></ol><h1 id="2-更改跨域访问设置"><a href="#2-更改跨域访问设置" class="headerlink" title="2. 更改跨域访问设置"></a>2. 更改跨域访问设置</h1><p>需求场景：本地写的vue项目想要访问远程服务器的资源，要设置允许跨域访问（CORS）：</p><ol><li>nginx.conf下的server括号下加入以下内容： <figure class="highlight nginx"><figcaption><span>Conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs NGINX"><span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Methods&#x27;</span> <span class="hljs-string">&#x27;GET,OPTIONS,POST&#x27;</span> always;<br><span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Credentials&#x27;</span> <span class="hljs-string">&#x27;true&#x27;</span> always;<br><span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span> <span class="hljs-variable">$http_origin</span> always;<br><span class="hljs-attribute">add_header</span> <span class="hljs-string">&#x27;Access-Control-Allow-Headers&#x27;</span> <span class="hljs-string">&#x27;Authorization, Content-Type, X-Requested-With, Cache-Control&#x27;</span> always;<br><span class="hljs-attribute">if</span> (<span class="hljs-variable">$request_method</span> = OPTIONS ) &#123; <span class="hljs-attribute">return</span> <span class="hljs-number">200</span>; &#125;<br></code></pre></td></tr></table></figure></li><li>重启ngxin：<code>service nginx reload</code></li></ol><h1 id="3-开放端口"><a href="#3-开放端口" class="headerlink" title="3. 开放端口"></a>3. 开放端口</h1><ol><li>修改本机防火墙策略表：<code>vim /etc/sysconfig/iptables</code></li><li>插入：<code>-A INPUT -p tcp -m tcp --dport 1234 -j ACCEPT</code>，其中1234为要开放的端口</li><li>重启防火墙：<code>service iptables restart</code></li><li>如果是云服务器，要开启云服务器供应商的防火墙<blockquote><p>尽量通过nginx转发来访问端口上的服务，而不是直接开放端口</p></blockquote></li></ol><h1 id="4-Nginx设置虚拟目录托管静态文件"><a href="#4-Nginx设置虚拟目录托管静态文件" class="headerlink" title="4. Nginx设置虚拟目录托管静态文件"></a>4. Nginx设置虚拟目录托管静态文件</h1><p>需求场景：比如在浏览器输入：<code>http://ip地址/static/xxx.jpg</code>，nginx自动代理到资源文件夹<code>/home/Website/static/xxx.jpg</code>下</p><ol><li>在nginx.conf中添加location设置： <figure class="highlight nginx"><figcaption><span>Conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs NGINX"><span class="hljs-section">location</span> <span class="hljs-regexp">~ /static/</span> &#123;<br>    <span class="hljs-attribute">root</span>  /home/Website/;<br>    <span class="hljs-comment"># 或者alias /home/Website/geotiff也可以</span><br>    <span class="hljs-comment"># autoindex on;#如果取消注释这行，就是开启文件目录形式</span><br>    &#125;<br></code></pre></td></tr></table></figure></li><li>如果是远程调试，要记得加上<a href="#2-%E6%9B%B4%E6%94%B9%E8%B7%A8%E5%9F%9F%E8%AE%BF%E9%97%AE%E8%AE%BE%E7%BD%AE">跨域访问请求头</a></li><li>如果还是不成功，试试给目录添加权限：<code>chmod -R 777 /home/Website/static/</code></li><li>重启nginx：<code>service nginx reload</code></li></ol><h1 id="5-Nginx托管api接口"><a href="#5-Nginx托管api接口" class="headerlink" title="5. Nginx托管api接口"></a>5. Nginx托管api接口</h1><p>需求场景:比如在浏览器输入：<code>http://ip地址/api/xxx</code>，nginx自动代理到api服务端口<code>http://ip地址:3000/api/xxx</code></p><ol><li>在nginx.conf中添加location设置： <figure class="highlight nginx"><figcaption><span>Conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs NGINX"><span class="hljs-section">location</span> <span class="hljs-regexp">~ /api/</span> &#123;<br>  <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>  <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>  <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$http_host</span>;<br>  <span class="hljs-comment">#proxy_set_header X-Nginx-Proxy true;</span><br>  <span class="hljs-attribute">proxy_set_header</span> Connection <span class="hljs-string">&quot;&quot;</span>;<br>  <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:3000;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>重启nginx:<code>service nginx reload</code></li></ol><h1 id="6-Nginx托管websocket接口"><a href="#6-Nginx托管websocket接口" class="headerlink" title="6. Nginx托管websocket接口"></a>6. Nginx托管websocket接口</h1><p>需求场景:比如前端使用websocket服务：<code>ws://ip地址/ws/</code>，nginx自动代理到ws服务端口<code>http://ip地址:8082/</code></p><ol><li>在nginx.conf中添加http设置： <figure class="highlight nginx"><figcaption><span>Conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs NGINX"><span class="hljs-comment">#My WebSocket Proxy Config</span><br><span class="hljs-attribute">map</span> <span class="hljs-variable">$http_upgrade</span> <span class="hljs-variable">$connection_upgrade</span> &#123;<br>    <span class="hljs-attribute">default</span> upgrade;<br>    &#x27;&#x27; close;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>添加server设置： <figure class="highlight nginx"><figcaption><span>Conf</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs NGINX"><span class="hljs-section">location</span> /ws/ &#123;<br>    <span class="hljs-attribute">proxy_pass</span> http://127.0.0.1:8082;<br>    <span class="hljs-attribute">proxy_http_version</span> <span class="hljs-number">1</span>.<span class="hljs-number">1</span>;<br>    <span class="hljs-comment">#以下配置添加代理头部：</span><br>    <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$host</span>; <span class="hljs-comment"># 保留源信息</span><br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> Upgrade <span class="hljs-variable">$http_upgrade</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> Connection <span class="hljs-variable">$connection_upgrade</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>重启nginx:<code>service nginx reload</code></li></ol>]]></content>
    
    
    <categories>
      
      <category>环境配置</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>about</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<div>  <img src="https://ghchart.rshah.org/ZXF1001" alt="GitHub热力图" style="width: 100%;"></div><div>  <div style="display:flex; justify-content:center; flex-wrap: wrap; padding-top: 10px; padding-bottom: 5px;">    <a href="https://www.w3.org/html/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/html5.svg" alt="html5" width="40" height="40"/></a>    <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/javascript.svg" alt="javascript" width="40" height="40"/></a>    <a href="https://nodejs.org" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/nodejs.svg" alt="nodejs" width="40" height="40"/></a>    <a href="https://www.python.org" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/python.svg" alt="python" width="40" height="40"/></a>    <a href="https://vuejs.org/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/vue.svg" alt="vuejs" width="40" height="40"/></a>    <a href="https://expressjs.com" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/express.svg" alt="express" width="40" height="40"/></a>    <a href="https://flask.palletsprojects.com/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/flask.svg" alt="flask" width="40" height="40"/></a>    <a href="https://www.mysql.com/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/mysql.svg" alt="mysql" width="40" height="40"/></a>    <a href="https://www.nginx.com" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/nginx.svg" alt="nginx" width="40" height="40"/></a>    <a href="https://scikit-learn.org/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/Scikit_learn.svg" alt="scikit_learn" width="40" height="40"/></a>    <a href="https://www.tensorflow.org" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/tensorflow.svg" alt="tensorflow" width="40" height="40"/></a>    <a href="https://git-scm.com/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/git.svg" alt="git" width="40" height="40"/></a>    <a href="https://www.linux.org/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/linux.svg" alt="linux" width="40" height="40"/></a>    <a href="https://www.docker.com/" target="_blank" rel="noreferrer" style="margin:3px"><img src="ico/docker.svg" alt="docker" width="40" height="40"/></a>  </div>  <!-- <div style="text-align: center; font-size: 12px; color: #999; margin-top: 5px; margin-bottom: 10px;">常用语言和工具</div> --></div><div style="text-align: center; font-size: 12px; color: #999; margin-bottom: 0px;">    GitHub热力图&常用技术</div><h1 id="👋"><a href="#👋" class="headerlink" title="👋"></a>👋</h1><p>风能方向的硕士研究生🧑‍🎓兼一个非科班程序员🧑‍💻，目前就读于浙江大学，研究<strong>风电场仿真与优化算法与平台的开发</strong>，顺便也喜欢用代码搞点稀奇古怪的玩意儿。</p><!-- <div align="center">  <a href="https://github.com/anuraghazra/github-readme-stats" target="_blank" rel="noreferrer">    <img src="https://github-readme-stats.vercel.app/api/top-langs/?username=ZXF1001&hide=GLSL&layout=compact&count_private=true" alt="Top Langs" style="width: 40%;">  </a>  <div style="text-align: center; font-size: 12px; color: #999; margin-top: 5px; margin-bottom: 10px;">GitHub语言统计</div></div> --><ul><li>INFJ🤔*（完美主义、无限内耗、创飞这个世界）*</li><li>喜欢拍胶片📷*（胶卷涨价太贵了！胶片滤镜平替一下）*</li><li>Hiphop爱好者🎧*（说唱启蒙是已经解散的安全着陆🛬）*</li><li>狗类之友🐶*（养了一只叫花花的中华田园犬，从高三陪我到现在，and一只叫汪汪的泰迪）*</li><li>有时喜欢看书📚*（但不经常看。以小说和心理学的书为主，最爱《百年孤独》范晔译版的绮丽描写，反复读了五遍）*</li></ul><details open="true">  <summary><b>看看我的狗 🐶</b></summary>  <div style="white-space: nowrap; overflow-x: auto; width: 100%; padding: 5px;">    <img src="dog/13.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/1.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/2.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/3.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/4.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/5.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/6.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/7.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/8.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/9.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/10.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/11.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/12.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/14.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/15.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/16.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/17.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/18.jpg" style="height: 250px; margin-right: 5px;">    <img src="dog/19.jpg" style="height: 250px; margin-right: 5px;"></div></details><p>📸 移步我的<a href="https://www.zhangxf.cc/photos/">相册</a>，看看我拍的照片</p><hr><p>🔗 更多关于我的项目和研究，看看<a href="https://github.com/ZXF1001">我的GitHub</a>。</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>相册</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h2 id="📸我的相册📸"><a href="#📸我的相册📸" class="headerlink" title="📸我的相册📸"></a>📸我的相册📸</h2><div class="markdown-body">  <details open>    <summary><b>2025</b></summary>    <div class="gallery">      <img src="pics/2025/DSC01330.JPG">      <img src="pics/2025/01-DSC01393.JPG">      <img src="pics/2025/02-DSC01361.JPG">      <img src="pics/2025/12-DSC01492.JPG">    </div>  </details>  <details open>    <summary><b>2024</b></summary>    <div class="gallery">      <img src="pics/2024/20241126213416.jpg">      <img src="pics/2024/20241126213413.jpg">      <img src="pics/2024/20241126213409.jpg">      <img src="pics/2024/20241126213357.jpg">      <img src="pics/2024/04ea4e519c9dad7af46a7358694ab22.jpg">      <img src="pics/2024/97e885bc573efc16049481880e8ea64.jpg">      <img src="pics/2024/105c083e8eb8f883813f275b82b9a31.jpg">      <img src="pics/2024/119e68358241af96d874b3d9af732ff.jpg">      <img src="pics/2024/35f046b9a1175b5a787b3dbf68823b2.jpg">      <img src="pics/2024/96268bb0eba3c51fa5cc6f4cc25011f.jpg">      <img src="pics/2024/f6297b715fa6c1dcce9db810ebda2a9.jpg">    </div>  </details>  <details open>    <summary><b>2023</b></summary>    <div class="gallery">      <img src="pics/2023/5ef40cba2abc63e9158abf4bc0dcc91.jpg">      <img src="pics/2023/88b8057407d68d177e9768d763ffb08.jpg">      <img src="pics/2023/9011bc5a286ddf22ba9eef5410b2a89.jpg">      <img src="pics/2023/afa157da100059be3fcaa2a71fbccb9.jpg">      <img src="pics/2023/f94be51731d28decb0249209c01df27.jpg">      <img src="pics/2023/DSC00050.jpg">      <img src="pics/2023/000019760013.jpg">      <img src="pics/2023/9aaaee003d0fa49b84ebf403c934863.jpg">      <img src="pics/2023/4457617be33ca90b9e68bb3cd951bf3.jpg">      <img src="pics/2023/516c69fd83bc0c1eaa36ed7b1fd7455.jpg">      <img src="pics/2023/03cf396b48384a72ff3280fbec98186.jpg">      <img src="pics/2023/9eed8dfa799f29b17f7b10d0bf4a72a.jpg">    </div>  </details>  <details open>    <summary><b>2022</b></summary>    <div class="gallery">      <img src="pics/2022/44e3dd46ef0cc767144b252adaca798.jpg">      <img src="pics/2022/4c83fd6d8c1a18327911ace8ae3811e.jpg">      <img src="pics/2022/07f93a403d9e39acbbf46b0dd88b04d.jpg">      <img src="pics/2022/eaa92b8260a06a795144110fb0f11ab.jpg">      <img src="pics/2022/1dcbbd63ea227dd891434870ec76f84.jpg">      <img src="pics/2022/c99f24f962187f08efa6f3bb87db0dc.jpg">      <img src="pics/2022/0abbd3fd92e11ad53cce366d634b0bd.jpg">    </div>  </details>  <details open>    <summary><b>2021</b></summary>    <div class="gallery">      <img src="pics/2021/138c6050f94243b7c4a79d73dd4bd6b.jpg">      <img src="pics/2021/cb452f2471c2d47c3a1a7b3e172cd06.jpg">      <img src="pics/2021/aa64217a943dc69cb335d064855e592.jpg">      <img src="pics/2021/3bda7b56b2175cd6e5d51704a824bac.jpg">      <img src="pics/2021/2588ed7ba681b1c9718e53bdfd2d1b4.jpg">      <img src="pics/2021/f076d6ba8b4efcd64824046f348223b.jpg">      <img src="pics/2021/89a313e26da951398c6fa837fc54df3.jpg">      <img src="pics/2021/5481ade56daf751ca902547ba00fe78.jpg">      <img src="pics/2021/de255ba3f9ab55c0c2f801e19998464.jpg">      <img src="pics/2021/0d933433e7fe1af990606fd97d0764e.jpg">      <img src="pics/2021/974ea04e31f390d769fc9b015588fd9.jpg">      <img src="pics/2021/bf774ad19be864c8bc917b34576848e.jpg">      <img src="pics/2021/5287e00e9d6ae1e543ed486a764fe0d.jpg">      <img src="pics/2021/4e2b18387481c3bc3582a53009dbe4a.jpg">      <img src="pics/2021/2776c9c3e78026706706540eaee0072.jpg">      <img src="pics/2021/ed80d360dd45169ea022e6cc6a069cd.jpg">      <img src="pics/2021/f3ebc22ef2fe44a86f25a20940534c0.jpg">    </div>  </details>  <details open>    <summary><b>2020</b></summary>    <div class="gallery">      <img src="pics/2020/245ca34a5824320ecf94d76c7f79faa.jpg">      <img src="pics/2020/d3b01da5911056fb99b035b544d5032.jpg">      <img src="pics/2020/8f92711b1d448beb23bef6abb90da17.jpg">    </div>  </details></div><style>  /* 设置整个页面的字体 */  .gallery {    white-space: nowrap;    overflow-x: auto;    width: 100%;    padding: 5px;  }  .gallery img {    height: 200px;  }  summary {  -webkit-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;}</style>]]></content>
    
  </entry>
  
  
  
</search>
